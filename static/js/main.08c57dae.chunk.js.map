{"version":3,"sources":["Assets/logo.svg","app/Reducers/todo/todoSlice.js","components/WingenioCalendar/WingenioCalendar.jsx","components/Todo/EditTodo.jsx","components/Todo/DeleteTodo.jsx","components/Todo/TodoMoreOptions.jsx","components/Todo/TodoActions.jsx","components/Hooks/Constants.jsx","components/Todo/Todo.jsx","components/Todo/CreateTodo.jsx","components/Todo/TodoList.jsx","components/Notes/NoteEditor.jsx","components/Hooks/CustomHTMLParser.jsx","components/Hooks/JSONToReact.jsx","components/Notes/DeleteNote.jsx","app/Reducers/note/noteSlice.js","components/Notes/EditNote.jsx","components/Notes/Notes.jsx","components/Notes/CreateNote.jsx","components/Notes/NotesList.jsx","components/Notes/NotesAside.jsx","app/Reducers/user/userSlice.js","app/Reducers/planning/planningSlice.js","pages/Planning/Planning.jsx","components/Registration/Registration.jsx","components/Login/Login.jsx","components/Auth/Auth.jsx","components/Todo/UpdateScheduleTime.jsx","components/Moments/MomentForm.jsx","components/Moments/MomentList.jsx","components/Todo/TodoSideNav.jsx","components/Dashboard/BurnoutIndex/BurnoutIndex.jsx","components/Dashboard/WeeklyAverageData/WeeklyAverageData.jsx","components/PostSlider/PostSlider.jsx","components/Dashboard/DoughnutChartWithTableSection.jsx","components/Dashboard/Graphs/LineGraph.jsx","components/Dashboard/WeeklyBurnoutIndex.jsx","components/Dashboard/ProductivityAndEventContent.jsx","app/Reducers/dashboard/dashboardSlice.js","components/Dashboard/Dashboard.jsx","components/Tab.jsx","App.js","app/store.js","authConfig.js","index.js"],"names":["_path","_defs","URI","token","localStorage","getItem","headers","todoSlice","createSlice","name","initialState","todoInSideNav","scheduleInSideNav","todoList","calendarSchedules","isSideNavOpen","reducers","setTodoInSideNav","state","action","payload","setTodoAndScheduleInSideNav","console","log","setTodoList","appendTodoList","updateTodoInList","todoData","calendar","map","todoItem","_id","length","todoId","title","scheduleIndex","findIndex","s","schedulesUpdate","setCalendarSchedules","addCalendarSchedule","openSideNav","addMoment","deleteTodo","filter","todo","actions","actionAddTodoInList","dispatch","getState","user","userId","userData","Axios","post","then","res","data","WingenioCalendar","useState","view","setView","useDispatch","useSelector","schedules","setSchedules","useEffect","date","formatterDate","moment","Date","format","a","get","calRes","breakCalRes","overAllCalendarData","schedule","id","className","onClick","height","calendars","bgColor","borderColor","color","isReadOnly","onClickSchedule","e","scheduleId","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","schema","yup","shape","todoName","required","todoDescription","EditTodo","editTodoOpen","setEditTodoOpen","useForm","defaultValues","description","resolver","yupResolver","control","handleSubmit","reset","formState","errors","isSubmitSuccessful","Modal","keepMounted","open","onClose","Box","sx","spacing","Stack","direction","justifyContent","alignItems","marginBottom","Typography","variant","component","onSubmit","todoUpdate","put","defaultValue","render","field","TextField","label","inputRef","input","setTimeout","focus","placeholder","error","type","multiline","helperText","message","Button","DeleteTodo","deleteConfirmationOpen","setDeleteConfirmationOpen","delete","TodoMoreOptions","anchorEl","setAnchorEl","Boolean","menuOptions","uuid","icon","fontSize","callback","IconButton","undefined","event","currentTarget","Menu","MenuListProps","option","MenuItem","ListItemIcon","ListItemText","TodoActions","onStartEvent","calendarId","category","dueDateClass","responseData","actionStartTodo","onEndEvent","onPauseEvent","onResumeEvent","actionResumeTodo","status","size","getTodoStatus","statusCode","MomentType","getMomentType","Todo","selectedTodoId","sideNav","actionSetTodoInSideNav","CreateTodo","createNotesOpen","setCreateNotesOpen","TodoList","appendSchedule","thirdPartyUserData","marginLeft","padding","NoteEditor","notes","onSaveNote","setShowNoteEditor","updatedNote","setUpdatedNote","notesFor","note","editor","ClassicEditor","config","toolbar","onReady","onChange","getData","onBlur","onFocus","CustomHTMLParser","htmlString","str","Elem","tagName","attributes","Array","from","value","children","childNodes","fromNode","nodeType","textContent","TextElem","Error","DOMParser","parseFromString","body","JSON","stringify","JSONToReact","htmlJson","onTextElementClick","enableCopyText","enableAddTodo","getTextData","elementData","reduce","c","parseChildren","child","parseHtmlJson","onCopyText","text","navigator","clipboard","writeText","err","childElement","elementChildren","uID","Tooltip","href","wrapDataInElement","DeleteNote","deleteNote","userSlice","noteList","createNote","updateNote","setNotes","setNotesFor","actionUpdateNotes","actionGetUserPlanningNotes","noteTitle","EditNote","editNoteConfirmationOpen","setEditNoteConfirmationOpen","Notes","content","noteContent","setNoteContent","showNoteEditor","parse","jsonNote","setJsonNote","show","rawJsonData","default","CreateNote","createdNoteData","NotesList","searchNote","setSearchNote","noteId","FormControl","m","InputLabel","htmlFor","OutlinedInput","target","endAdornment","InputAdornment","edge","endIcon","toLowerCase","indexOf","NotesAside","showNotes","setShowNotes","fixed","showAccountRegistration","errorMessage","accountExist","teamMembers","setThirdPartyUserData","setUserData","setAccountExist","userExist","setShowRegistration","setShowError","setTeamMembers","planningSlice","userPlanningList","selectedPlan","setUserPlanningList","setSelectedPlan","start","end","setMinutes","getMinutes","setHours","getHours","firstName","lastName","teamsId","email","role","password","min","Registration","loginHint","registrationThirdPartyUserData","catch","actionRegister","Login","setItem","alert","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","x1","y1","x2","y2","gradientUnits","offset","stopColor","ForwardRef","Auth","UpdateScheduleTime","updateScheduleModalOpen","setUpdateScheduleModalOpen","updateSchedule","startTime","setStartTime","endTime","setEndTime","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","timeValue","renderInput","params","toISOString","MomentForm","momentToEdit","setMomentToEdit","React","momentType","setMomentType","momentId","updatedMomentText","actionAddMoment","forwardRef","MomentList","momentList","selectedMoment","setSelectedMoment","Timeline","momentItem","TimelineItem","TimelineOppositeContent","flex","createdAt","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","momentMoreOption","TodoSideNav","setAsideTodoOpen","getTimeEnded","sideNavTodoData","paddingBottom","borderBottom","isOpen","moments","BurnoutIndex","burnoutIndexData","dashboard","accountName","Table","TableBody","row","TableRow","TableCell","scope","align","toFixed","WeeklyAverageData","averageCountData","colorPallete","comparison","previous","comparisonValue","current","isNegative","weeklyComparisonVal","PostSlider","numberOfSlides","autoplay","settings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","pauseOnHover","adaptiveHeight","DoughnutChartWithTableSection","graphData","totalGraphData","withTableAndListToggle","unit","isPercentageData","chartWidth","chartHeight","dataView","setDataView","colorDomain","colorRange","innerRadius","radius","labelsRadiusMultiplier","animation","sort","b","count","x","angle","Number","showLabels","TableContainer","overflowX","stickyHeader","TableHead","backgroundColor","LineGraph","graphDataArray","xType","stroke","line","ticks","fontWeight","tickLabelAngle","strokeWidth","WeeklyBurnoutIndex","weeklyBurnoutIndex","ProductivityAndEventContent","weeklyProductivityAndEvent","getDayName","dateStr","dateSplit","toString","split","dayName","dayNum","weeklyDefaultValues","y","momentPerHourDefaultValues","dailyProductivityData","dashboardSlice","setWeeklyBurnoutIndex","setWeeklyProductivityAndEvent","setAverageCountData","setBurnoutIndexData","setMomentPerHourDefaultValues","setWeeklyProductivity","calendarRecords","calRec","breakAndProductiveHours","breakHours","productiveHours","yVal","tasks","lastElement","pop","totalLoggedHours","burnoutIndex","actionGetAverageCountData","urlParam","Dashboard","dashboardOpen","setDashboardOpen","endDate","formattedEndDate","mb","actionGetBreaktimeOnDateRange","Tab","calendarValue","setCalendarValue","selectedSchedule","setSelectedSchedule","asideTodoOpen","scheduleUpdate","startIcon","breakData","breakSchedule","DatePicker","newCalendarValue","App","store","configureStore","reducer","todoReducer","userReducer","noteReducer","dashboardReducer","planning","planningReducer","graphEndPoint","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","ReactDOM","StrictMode","instance","document","getElementById"],"mappings":"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","file":"static/js/main.08c57dae.chunk.js","sourcesContent":["var _path, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 543,\n    height: 150,\n    viewBox: \"0 0 543 150\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.64 102.712C3.64 91.48 8.392 72.76 15.304 57.064C19.912 46.84 22.36 41.368 27.976 33.304C35.752 22.36 38.056 16.6 34.888 19.192C28.84 24.52 20.776 36.472 13.576 52.456C4.648 72.616 0.76 90.904 0.76 102.712C0.76 113.08 4.36 118.264 9.4 118.264C14.728 118.264 22.648 99.256 26.536 91.48C29.992 84.28 36.04 71.896 38.2 71.896C39.496 71.896 39.496 73.912 39.208 78.952C38.344 90.184 31.864 110.776 29.992 127.192C28.84 136.696 29.704 149.224 39.784 149.224C49.72 149.224 63.112 134.824 74.92 111.64C87.304 87.016 97.528 56.056 97.528 25.24C97.528 5.224 94.072 0.471998 91.624 0.183993C89.032 0.0399952 87.016 3.928 90.04 2.91999C93.064 1.912 94.648 6.95199 94.648 25.384C94.648 44.536 85.576 81.832 72.328 108.328C59.08 134.824 43.96 146.776 39.208 146.776C34.312 146.776 32.728 140.872 33.736 126.904C34.888 112.36 41.368 93.928 42.376 78.952C42.808 72.04 41.224 68.728 37.624 68.728C34.744 68.728 31.72 76.504 24.808 89.176C17.464 102.568 12.856 115.816 8.68 115.816C5.512 115.816 3.64 109.912 3.64 102.712ZM175.205 42.52C176.357 39.352 174.773 39.208 173.621 41.944C156.197 83.128 145.973 101.272 137.045 101.272C133.877 101.272 135.029 97.24 137.909 91.336C139.781 87.016 144.101 82.984 144.101 79.384C144.101 77.656 143.237 76.36 137.909 74.344C136.757 73.768 135.173 72.76 135.173 71.32C135.173 71.176 135.173 70.888 135.317 70.312C137.189 68.296 138.053 69.016 138.053 67.288C138.053 66.28 137.333 65.416 136.181 65.128C135.173 64.84 133.013 65.992 132.437 68.728C132.149 69.736 132.149 70.744 132.293 71.608C129.125 76.648 124.517 79.816 119.045 81.112C117.461 76.504 114.437 73.48 110.405 73.48C107.093 73.48 104.789 75.64 104.501 77.944C104.069 81.688 107.669 84.136 112.133 84.136C113.861 84.136 115.445 84.136 116.885 83.848C117.173 85.432 117.173 87.16 117.029 89.176C116.021 102.136 109.109 110.92 104.357 110.344C102.341 110.056 101.045 107.896 101.333 104.152C101.765 99.4 104.213 94.072 109.397 88.888C110.981 87.016 112.709 85.864 110.405 85.576C108.677 85.288 107.093 86.728 105.653 88.312C101.765 92.632 99.1727 98.68 98.5967 103.864C98.1647 108.904 100.469 112.504 104.213 112.792C111.125 113.224 118.469 106.168 119.909 90.328C120.053 87.88 120.053 85.432 119.621 83.416C125.093 82.12 129.557 79.096 133.301 73.912C134.021 75.064 135.173 75.928 136.757 76.504C139.781 77.656 140.357 78.52 140.357 80.104C140.357 82.84 136.613 87.736 135.173 90.616C130.997 98.968 133.013 103.864 136.469 103.864C148.853 103.864 162.389 78.808 175.205 42.52ZM112.565 81.832C108.389 81.832 106.949 79.96 107.093 78.088C107.237 76.504 108.677 75.64 110.261 75.64C112.997 75.784 115.301 77.8 116.453 81.544C115.157 81.688 113.861 81.832 112.565 81.832ZM190.561 76.072C191.713 76.072 192.289 74.632 192.289 73.912C192.289 73.192 191.137 71.464 190.129 71.464C189.265 71.464 179.041 76.216 171.553 81.112C170.545 81.688 169.681 82.264 168.961 82.84C170.545 75.064 172.273 66.424 174.289 57.496C177.025 44.68 180.769 30.424 181.201 29.704C182.785 26.248 184.657 23.224 185.089 21.496C185.521 20.2 185.089 16.888 183.937 16.888C181.489 16.888 178.033 24.52 170.977 55.624C167.809 69.016 165.937 78.52 164.785 86.008C161.761 88.6 160.897 90.472 161.329 91.768C161.617 92.344 162.337 92.92 163.633 93.352C163.201 96.088 162.913 98.68 162.625 101.272C161.473 112.072 161.185 119.128 162.913 119.128C164.497 119.128 163.201 115.24 165.361 102.136L166.801 93.928C171.121 94.504 177.889 94.36 185.377 93.64C194.881 92.632 207.985 90.76 215.905 88.168C217.057 87.88 217.633 85.288 215.473 85.72C206.113 88.024 194.305 89.896 185.233 90.76C178.753 91.336 170.113 91.768 167.377 90.76C167.521 89.752 167.665 88.744 167.953 87.736C169.681 86.152 172.993 84.28 176.017 82.408C180.769 79.672 188.833 75.496 189.121 75.496C189.409 75.496 189.841 76.072 190.561 76.072ZM318.993 45.256C317.265 45.976 318.129 47.848 319.857 47.56C321.585 47.416 327.777 44.392 329.217 38.344C330.657 31.576 327.489 25.96 318.993 24.52C311.217 23.224 298.689 24.088 280.257 32.296C261.969 40.36 253.185 48.424 250.881 59.08C248.577 69.736 254.049 77.512 269.889 92.488C273.633 96.232 277.089 99.544 279.825 102.424C278.673 103 277.377 103.432 276.513 104.008C262.401 111.352 249.441 120.568 247.569 130.648C246.273 138.28 252.897 146.632 267.153 147.928C281.985 149.368 296.241 142.888 297.969 131.368C299.409 122.152 295.665 114.664 284.577 103C300.705 96.088 329.217 87.88 332.529 87.16C336.417 86.44 335.697 84.712 331.953 85.576C328.497 86.296 298.401 94.792 282.705 101.128C279.681 97.96 276.081 94.504 271.905 90.616C257.649 77.368 252.753 69.592 254.913 59.656C257.217 49.72 269.889 40.936 281.985 35.176C296.097 28.552 311.073 25.96 318.417 27.256C325.041 28.408 327.633 32.152 326.481 37.624C325.473 42.232 321.441 44.392 318.993 45.256ZM294.657 130.648C293.217 138.712 281.697 145.48 267.297 144.616C255.489 143.752 249.441 137.272 250.593 130.648C252.033 122.872 260.673 115.672 278.385 106.024C279.393 105.448 280.401 104.872 281.697 104.296C293.217 116.824 295.809 123.448 294.657 130.648ZM332.705 140.296C334.721 140.008 333.569 139.432 332.849 133.96C331.985 127.048 333.425 106.6 334.577 98.392C336.449 83.272 338.609 70.744 339.905 63.688C340.769 58.36 342.065 52.888 343.361 47.704H364.961C375.761 47.704 382.817 47.848 382.529 46.12C382.097 44.536 378.641 45.256 365.393 45.256C351.137 45.256 349.265 44.824 344.225 44.824C346.961 34.744 349.985 26.824 350.273 26.392C351.857 22.936 352.433 25.384 352.865 23.656C353.153 22.36 352.289 18.904 351.137 18.904C349.121 18.904 344.801 26.392 340.193 44.824L319.745 44.68C315.569 44.68 314.561 44.248 313.121 43.384C311.969 42.664 307.937 44.392 308.225 45.688C308.801 47.848 311.393 47.704 339.473 47.704C338.465 52.024 337.457 56.776 336.449 62.104C332.129 85.288 329.969 115.528 329.681 124.312C329.537 134.968 330.833 140.728 332.705 140.296ZM425.648 93.928C416.144 99.976 407.936 103.864 402.608 103.576C397.28 103.144 397.136 98.824 399.008 95.224C400.88 91.192 403.904 87.016 403.904 85.864C403.904 84.568 403.328 83.992 398 81.832C396.848 81.4 395.264 80.392 395.264 78.952C395.264 78.952 395.264 78.664 395.408 78.232C395.408 78.088 395.408 78.088 395.552 77.944C397.28 75.928 398.144 76.504 398.144 74.92C398.144 73.768 397.424 73.048 396.272 72.76C395.264 72.472 393.104 73.48 392.528 76.216C392.24 77.368 392.24 78.52 392.528 79.672C388.64 84.856 379.136 89.176 370.64 91.48C370.64 82.84 367.472 76.36 361.136 76.36C355.808 76.36 351.344 80.68 351.344 86.008C351.344 88.456 352.208 90.472 353.936 92.056C350.48 96.664 347.024 103.144 347.024 110.632C347.024 115.96 349.328 119.56 353.072 119.56C360.128 119.56 369.344 108.76 370.496 94.648C379.712 92.488 388.928 86.008 393.248 81.256C393.968 82.552 395.12 83.56 396.848 84.136C399.872 85.288 400.16 85.864 400.16 86.44C400.16 87.16 397.712 90.904 396.272 94.072C392.96 100.84 395.12 106.024 401.024 106.456C406.64 107.032 416.72 102.568 426.656 95.368C429.392 93.352 428.096 92.344 425.648 93.928ZM352.352 116.824C351.2 116.824 350.192 114.952 350.192 111.928C350.192 108.472 350.768 103.144 353.648 97.672C354.368 96.232 355.232 94.792 356.24 93.64C359.12 95.08 363.008 95.8 367.472 95.224C365.744 107.464 357.968 116.824 352.352 116.824ZM362.432 86.296C362.432 85.72 362 85.288 361.136 85.288C360.56 85.288 358.4 86.872 355.952 89.608C354.8 88.312 354.224 86.584 354.224 84.712C354.224 81.544 356.816 78.808 360.704 78.808C364.736 78.808 367.904 83.272 367.904 90.328C367.904 91.048 367.76 91.624 367.76 92.2C363.584 93.064 360.416 92.632 358.112 91.336C360.416 88.456 362.432 86.728 362.432 86.296ZM473.811 84.856C472.947 84.856 462.147 89.464 448.035 94.504C435.795 98.824 431.763 99.256 429.891 99.256C429.171 99.256 428.451 98.392 428.595 96.664C428.883 94.36 429.315 91.624 431.475 87.16C432.339 85.576 431.475 84.712 430.755 84.856C428.307 85.288 427.587 86.44 427.011 88.456C426.147 90.904 425.571 94.648 425.571 96.808C425.571 99.112 426.723 101.704 430.467 101.704C432.771 101.704 436.083 100.984 449.187 96.52C465.747 90.904 472.659 87.016 474.387 86.584C475.107 86.296 474.531 84.856 473.811 84.856ZM433.635 74.632C434.499 74.776 436.371 73.192 436.803 71.896C437.091 70.6 436.227 68.872 434.931 68.584C434.067 68.44 432.915 70.024 432.627 70.888C432.339 71.896 432.915 74.344 433.635 74.632ZM481.408 86.152C481.408 84.568 480.544 83.272 478.528 83.272C473.92 83.272 468.16 87.592 468.16 93.928C468.16 99.4 472.624 101.704 477.232 101.704C485.008 101.704 493.36 92.776 501.856 82.552C504.736 79.24 507.616 75.352 510.208 71.896L510.64 73.336C512.08 78.808 516.544 88.888 519.424 98.392C516.544 100.552 513.664 103 510.784 105.736C490.912 124.6 491.632 138.28 503.44 138.28C511.792 138.28 524.752 129.064 524.752 113.8C524.752 109.192 523.744 104.152 522.448 99.256C529.504 93.496 536.56 89.176 541.312 87.448C542.176 87.16 542.176 86.44 541.456 86.44C540.88 86.44 540.16 85.864 539.872 86.008C534.256 88.312 528.208 91.768 521.728 96.52C518.56 85.576 513.952 75.352 512.944 71.608C512.656 70.456 512.512 69.448 512.656 68.584C515.536 64.84 517.984 61.96 519.856 61.096C521.152 60.376 521.296 58.504 517.984 58.792C514.528 59.224 510.784 63.112 510.208 68.584C507.616 72.184 504.16 76.936 500.416 81.256C491.776 91.336 483.712 99.4 477.232 99.4C474.208 99.4 472.048 98.248 471.184 95.8C475.504 93.64 481.408 89.032 481.408 86.152ZM522.016 111.928C522.016 125.32 511.216 135.976 502 135.976C495.808 135.976 495.52 124.6 513.376 107.32C515.536 105.16 517.84 103 520.144 101.128C521.296 105.016 522.016 108.76 522.016 111.928ZM470.896 93.064C470.896 89.608 475.36 84.856 479.536 84.856C479.536 86.872 474.64 92.2 470.896 94.36V93.064Z\",\n    fill: \"url(#paint0_linear_202_83)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_202_83\",\n    x1: -5,\n    y1: 67,\n    x2: 541,\n    y2: 67,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.0004,\n    stopColor: \"#4FD55A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#5665EE\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.919ee689.svg\";\nexport { ForwardRef as ReactComponent };","import { createSlice } from '@reduxjs/toolkit';\nimport Axios from \"axios\";\n\n/* Just a test code... remove it afterwards */ \nconst URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n/* Just a test code... remove it afterwards */\nconst token = localStorage.getItem('wstoken');\nconst headers = {\n    headers: {\n        \"auth-token\": token\n    }\n}\n\nconst initialState = {\n    todoInSideNav: null,\n    scheduleInSideNav: null,\n    todoList: [],\n    calendarSchedules: [],\n    isSideNavOpen: false,\n};\n\nexport const todoSlice = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        setTodoInSideNav: (state, action) => {\n            state.todoInSideNav = action.payload\n            state.scheduleInSideNav = null\n            state.isSideNavOpen = true\n        },\n        setTodoAndScheduleInSideNav: (state, action) => {\n            console.log(action)\n            state.todoInSideNav = action.payload.todoInSideNav\n            state.scheduleInSideNav = action.payload.scheduleInSideNav\n            state.isSideNavOpen = true\n        },\n        setTodoList: (state, action) => {\n            state.todoList = action.payload\n        },\n        appendTodoList: (state,action) => {\n            state.todoList = [...state.todoList, action.payload]\n        },\n        updateTodoInList: (state,action) => {\n            const { todoData, calendar } = action.payload;\n            console.log(calendar)\n\n            // update todo list\n            state.todoList = [...state.todoList].map(todoItem => {\n                return todoData._id === todoItem._id ? todoData : todoItem\n            })\n\n            // update the side nav\n            const todoInSideNav = {...state.todoInSideNav}\n            if(todoInSideNav){\n                if(todoInSideNav._id == todoData._id){\n                    state.todoInSideNav = todoData;\n                }\n            }\n\n            // update also the calendardata\n            // update the names of the calendar affected by the name change\n            if(state.calendarSchedules.length){ \n                state.calendarSchedules = state.calendarSchedules.map(calendar=>{\n                    return calendar.todoId === todoData._id ? {\n                        ...calendar,\n                        title: todoData.name\n                    } : calendar\n                })\n            }\n            \n            \n            // find if calendar exist\n            let scheduleIndex = calendar ? state.calendarSchedules.findIndex(s=>s._id===calendar._id) : -1;\n            if(calendar){\n                if(scheduleIndex>-1){\n                  const schedulesUpdate = [...state.calendarSchedules]\n                  schedulesUpdate[scheduleIndex] = calendar;\n                  state.calendarSchedules = schedulesUpdate;\n                } else {\n                    state.calendarSchedules = [...state.calendarSchedules, calendar];\n                }\n            }\n            \n        },\n        setCalendarSchedules: (state,action) => {\n            state.calendarSchedules = action.payload\n        },\n        addCalendarSchedule: (state,action) => {\n            state.calendarSchedules = [...state.calendarSchedules,action.payload]\n        },\n        openSideNav: (state,action) => {\n            state.isSideNavOpen = action.payload\n            if(action.payload === false){ // means closing the sidenav\n                state.scheduleInSideNav = null\n                state.todoInSideNav = null\n            }\n        },\n        addMoment: (state,action) => {\n            if(state.todoInSideNav){\n                state.todoInSideNav = action.payload;\n            }\n            if(state.scheduleInSideNav){\n                state.scheduleInSideNav = action.payload;\n            }\n        },\n        deleteTodo: (state,action) => {\n            const todoId = action.payload;\n            state.todoList = [...state.todoList].filter(todo => todo._id !== todoId)\n        }\n    }\n});\n\nexport const {\n    setTodoInSideNav,\n    setTodoAndScheduleInSideNav,\n    setTodoList,\n    appendTodoList,\n    updateTodoInList,\n    setCalendarSchedules,\n    openSideNav,\n    addMoment,\n    deleteTodo,\n    addCalendarSchedule\n} = todoSlice.actions;\n\nexport const actionSetTodoInSideNav = (todoId,schedule = null) => (dispatch, getState) => {\n\n    const selectedTodoId = schedule ? schedule.todoId : todoId;\n    \n    if(!token){ return 0 }\n\n    Axios.get(\n        `${URI}/todos/${selectedTodoId}`,\n        headers\n    ).then(res => {\n        if(schedule)\n            dispatch(setTodoAndScheduleInSideNav({\n                todo: res.data,\n                sideNav: schedule\n            }))\n        else{\n            console.log(res.data)\n            dispatch(setTodoInSideNav(res.data))\n        }\n    })\n\n};\n\nexport const actionGetCalendarDetail = scheduleId => dispatch => {\n    \n    if(!token){ return 0 }\n    \n    \n    Axios.get(\n        `${URI}/todos/get-schedule-data/${scheduleId}`,\n        headers\n    ).then(res => {\n        const schedule = res.data;\n        const todo = res.data.todo;\n        dispatch(setTodoAndScheduleInSideNav({\n            todoInSideNav: todo,\n            scheduleInSideNav: schedule\n        }))\n    })\n\n}\n\nexport const actionGetTodoList = userId => async dispatch => {\n    \n    if(!token){ return 0 }\n    \n    Axios.get(\n        `${URI}/todos/${userId}`,\n        headers\n    ).then( res => dispatch(setTodoList(res.data)) )\n\n}\n\nexport const actionAddTodoInList = todo => (dispatch,getState) => {\n    \n    if(!token){ return 0 }\n    \n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n\n    Axios.post(\n        `${URI}/todos/create`,\n        {\n            ...todo,\n            userId\n        },\n        headers\n    ).then( res => dispatch(appendTodoList(res.data)) )\n\n}\n\nexport const actionPauseTodo = todoId => dispatch => {\n    \n    if(!token){ return 0 }\n\n    Axios.put(\n        `${URI}/todos/pause`,\n        { todoId },\n        headers\n    ).then( res => dispatch(updateTodoInList(res.data)) )\n\n}\n\nexport const actionUpdateTodo = todoUpdate => dispatch => {\n    \n    if(!token){ return 0 }\n\n    Axios.put(\n        `${URI}/todos/update`,\n        todoUpdate,\n        headers\n    ).then( res => dispatch(updateTodoInList({\n        todoData: res.data,\n        calendar: null \n    })))\n\n}\n\nexport const actionEndTodo = todoId => dispatch => {\n    \n    if(!token){ return 0 }\n\n    Axios.post(\n        `${URI}/todos/end`,\n        { todoId },\n        headers\n    ).then( res => dispatch(updateTodoInList(res.data)) )\n\n}\n\nexport const actionResumeTodo = todo => (dispatch,getState) => {\n\n    if(!token){ return 0 }\n\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n\n    const schedule = {\n        todoId: todo._id,\n        calendarId: '0',\n        title: \"\",\n        category: 'time',\n        dueDateClass: '',\n        userId: userId\n    }\n\n    Axios.post(\n        `${URI}/todos/resume`,\n        schedule,\n        headers\n    ).then( res => {\n        const responseData = {\n            ...res.data,\n            calendar: {\n                ...res.data.calendar\n            }\n        }\n        console.log(responseData)\n        dispatch(updateTodoInList(responseData)) \n    })\n\n}\n\nexport const actionAddTodo = todo => dispatch => {\n\n    const schedule = {\n        todoId: todo._id,\n        calendarId: '0',\n        title: '',\n        category: 'time',\n        dueDateClass: ''\n    }\n    \n    if(!token){ return 0 }\n\n    Axios.post(\n        `${URI}/todos/start`,\n        schedule,\n        headers\n    ).then( res => dispatch(updateTodoInList(res.data)) )\n\n}\n\nexport const actionStartTodo = todo => (dispatch,getState) => {\n\n    if(!token){ return 0 }\n\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n\n    const schedule = {\n        todoId: todo._id,\n        calendarId: '0',\n        title: '',\n        category: 'time',\n        dueDateClass: '',\n        userId: userId\n    }\n    \n    Axios.post(\n        `${URI}/todos/start`,\n        schedule,\n        headers\n    ).then( res => {\n        const responseData = {\n            ...res.data,\n            calendar: {\n                ...res.data.calendar\n            }\n        }\n        console.log(responseData)\n        dispatch(updateTodoInList(responseData))\n    } )\n\n}\n\nexport const actionGetCalendarData = date => async dispatch => {\n    \n    if(!token){ return 0 }\n\n    const calRes = await Axios.get(`${URI}/calendar/get-calendar-on-date/${date}`,headers)\n    const breakCalRes = await Axios.get(`${URI}/break/get-break-on-date/${date}`,headers)\n\n    const overAllCalendarData = [\n        ...calRes.data.map(schedule=>{\n            return {\n            ...schedule,\n            id: schedule._id\n            }\n        }),\n        ...breakCalRes.data.map(schedule=>{\n            return {\n            ...schedule,\n            id: schedule._id\n            }\n        })\n    ]\n\n    dispatch(setCalendarSchedules(overAllCalendarData))\n}\n\nexport const actionOpenSideNav = isOpen => dispatch => {\n\n    dispatch(openSideNav(isOpen))\n\n}\n\nexport const actionAddMoment = moment => (dispatch,getState) => {\n\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n\n    if(!token){ return 0 }\n\n    Axios.put(\n        `${URI}/todos/add-moment`,\n        {\n            ...moment,\n            userId\n        },\n        headers\n    ).then( res => {\n        dispatch(addMoment(res.data))\n    })\n\n}\n\nexport const actionDeleteTodo = todoId => dispatch => {\n    \n    if(!token){ return 0 }\n    \n    Axios.delete(\n        `${URI}/todos/${todoId}`,\n        headers\n    ).then(res => {\n        dispatch(deleteTodo(todoId));\n    })\n\n}\n\nexport const actionAddBreaktime = (startDate = null, endDate = null) => async (dispatch,getState) => {\n  \n    if(!token){ return 0 }\n\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n\n    const breakData = {\n        title: \"Lunch break\",\n        userId\n    };\n\n    const res = await Axios.post(\n                    `${URI}/break`,\n                    breakData,\n                    headers\n                );\n    const breakSchedule = {\n        ...res.data,\n        id: res.data._id\n    }\n    dispatch(addCalendarSchedule(breakSchedule))\n    \n}\n\nexport const actionGetBreaktimeOnDateRange = (urlParam = \"\") => async (dispatch,getState) => {\n    \n    if(!token){ return 0 }\n\n    const res = await Axios.get(\n                    `${URI}/break/break-get-week-average-comparison?${urlParam}`,\n                    headers\n                );\n    console.log(res)\n    // const breakSchedule = {\n    //     ...res.data,\n    //     id: res.data._id\n    // }\n    // dispatch(addCalendarSchedule(breakSchedule))\n    \n}\n\nexport const actionScheduleChangeTime = (schedule, start, end) => async (dispatch,getState) => {\n    Axios.put(`${URI}/calendar/schedule-change-time`,{\n        schedule: schedule,\n        start: start,\n        end: end\n    }).then(res => {\n        // modify the state here\n        console.log(\"pumasok dito\")\n        // updateSchedule({\n        //     ...res.data,\n        //     id: res.data._id\n        // })\n        // setUpdateScheduleModalOpen(false)\n    })\n}\n\nexport const actionRecordPlan = (user, todoList, calendarPlanData, selectedDateRange = []) => async (dispatch,getState) => {\n    \n    console.log(user);\n    console.log(todoList);\n    console.log(calendarPlanData);\n    console.log(selectedDateRange)\n    \n    Axios.post(\n        `${URI}/planning/create`,\n        {\n            user: user,\n            todoList: todoList,\n            calendarPlanData: calendarPlanData,\n            selectedDateRange: selectedDateRange\n        },\n        headers\n    ).then(res => {\n        console.log(res)\n    })\n    \n}\n\nexport const isSideNavOpen = state => state.todo.isSideNavOpen;\nexport const todoList = state => state.todo.todoList;\nexport const todoInSideNav = state => state.todo.selectedTodoInSideNav;\nexport const calendarSchedules = state => state.todo.calendarSchedules;\n\nexport default todoSlice.reducer;","import React,{useState,useEffect} from 'react';\nimport './WingenioCalendar.scss';\nimport Calendar from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css';\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\nimport moment from 'moment';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { \n  actionSetTodoInSideNav,\n  actionGetCalendarData,\n  actionGetCalendarDetail\n} from '../../app/Reducers/todo/todoSlice';\n\nconst myTheme = {\n    // Theme object to extends default dark theme.\n};\n\nconst WingenioCalendar = ({\n    \n}) => {\n\n    const [view,setView] = useState('day');// day, week, month\n    // const [schedulesData,setSchedulesData] = useState([]);\n    const dispatch = useDispatch();\n\n    const { calendarSchedules } = useSelector(state => state.todo);\n    const [schedules, setSchedules] = useState([]);\n\n    const onUpdateTime = calendarEvent => {\n      const stateDate = calendarEvent.schedule.start._date;\n      const endDate = calendarEvent.schedule.end._date;\n      setSchedules([...schedules.map(schedule=>{\n        if(calendarEvent.schedule.id == schedule.id){\n          return {\n            ...schedule,\n            start: moment(stateDate).set({\"hour\": 10, \"minute\": 0}).toDate().toISOString(),\n            end: moment(endDate).set({\"hour\": 11, \"minute\": 32}).toDate().toISOString()\n          }\n        }\n        return schedule\n      })])\n    }\n\n    useEffect(() => {\n      const formatterDate = moment(new Date()).format('YYYY-MM-DD');\n      dispatch(actionGetCalendarData(formatterDate))\n    }, [])\n\n    // calendarSchedule\n    useEffect(()=>{\n      console.log(\"nasa wingenio calendar\")\n      console.log(schedules)\n      setView('day')\n      setSchedules(calendarSchedules)\n    },[calendarSchedules])\n\n    const onCalendarTodoClick = calendarEvent => {\n      console.log(schedules)\n      // console.log(calendarEvent.schedule)\n      // console.log(calendarSchedules)\n      // console.log(calendarSchedules)\n      // const clickedSchedule = calendarSchedules.find(schedule => schedule._id == calendarEvent.schedule.id)\n      // console.log(calendarSchedules)\n      // console.log(calendarEvent.schedule.id)\n      // console.log(clickedSchedule)\n      // if(clickedSchedule){\n      //   dispatch(actionSetTodoInSideNav(clickedSchedule.todoId,clickedSchedule))\n      //   setAsideTodoOpen(true)\n      // }\n    }\n\n    return <div className='CalendarContainer'>        \n      {/* {console.log(schedules)} */}\n        <div className=\"view-container\">\n          <p onClick={()=>console.log(calendarSchedules)}>testing</p>\n            <p onClick={()=>setView('day')}>Daily</p>\n            <p onClick={()=>setView('week')}>Weekly</p>\n            <p onClick={()=>setView('month')}>Monthly</p>\n        </div>\n        \n        <Calendar\n            height=\"1000px\"\n            calendars={[\n              {\n                id: '0',\n                name: 'Private',\n                bgColor: '#eadcff',\n                borderColor: '#581eb2',\n                color: '#581eb2',\n              },\n              {\n                id: '1',\n                name: 'Company',\n                bgColor: '#00a9ff',\n                borderColor: '#00a9ff'\n              }\n            ]}\n            // disableDblClick={true}\n            // disableClick={false}\n            isReadOnly={true}\n            schedules={schedules}\n            view={view}\n            onClickSchedule={ e => {\n              console.log(e.schedule)\n              dispatch(actionGetCalendarDetail(e.schedule.id))\n            }}\n        />\n    </div>\n}\n\nexport default WingenioCalendar;","//import EditTodo from '.components/EditTodo/EditTodo';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    actionUpdateTodo\n} from '../../app/Reducers/todo/todoSlice';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst schema = yup.object().shape({\n    todoName: yup.string().required(),\n    todoDescription: yup.string().required(),\n});\n\nconst EditTodo = ({\n    todo,\n    editTodoOpen,\n    setEditTodoOpen,\n}) => {\n\n    const dispatch = useDispatch();\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            todoName: todo.name,\n            todoDescription: todo.description\n        },\n        resolver: yupResolver(schema)\n    });\n\n    // reset the form after successfull submit of form data\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            setEditTodoOpen(false)\n            // reset({ todoName: \"\", todoDescription: \"\" });\n        };\n    }, [isSubmitSuccessful, reset]);\n\n    // on form submit\n    const onSubmit = ({todoName,todoDescription}) => {\n\n        console.log({todoName,todoDescription})\n\n        dispatch(actionUpdateTodo({\n            _id: todo._id,\n            name: todoName,\n            description: todoDescription\n        }))\n\n    }\n\n    return <div className='EditTodoContainer'>\n        <Modal\n            keepMounted\n            open={editTodoOpen}\n            onClose={()=>setEditTodoOpen()}\n            aria-labelledby=\"keep-mounted-modal-title\"\n            aria-describedby=\"keep-mounted-modal-description\"\n        >\n            <Box sx={style} spacing={2}>\n                <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"flex-start\"\n                spacing={2}\n                style={{marginBottom:25}}>\n\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\n                        {`Update Todo`}\n                    </Typography>\n\n                    <CloseIcon \n                    className=\"close-form-trigger\"\n                    onClick={()=>setEditTodoOpen(false)}/>\n\n                </Stack>\n                <form className=\"todo-edit-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Stack spacing={2}>\n\n                        <Controller\n                        name=\"todoName\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"Todo Name\"\n                            variant=\"outlined\"\n                            inputRef={input => input && setTimeout(() =>{\n                                input.focus()\n                            },100)}\n                            placeholder={\"Todo Name\"}\n                            error={!!errors.todoName}\n                            type=\"text\"\n                            multiline\n                            helperText={errors?.todoName ? errors?.todoName?.message : ''}\n                        />\n                        }/>\n                        \n                        <Controller\n                            name=\"todoDescription\"\n                            control={control}\n                            defaultValue={\"\"}\n                            render={({field}) => <TextField\n                                {...field}\n                                className=\"textArea\"\n                                label=\"Todo Description\"\n                                variant=\"outlined\"\n                                placeholder={\"Todo Description\"}\n                                error={!!errors.todoDescription}\n                                type=\"text\"\n                                multiline\n                                helperText={errors?.todoDescription ? errors?.todoDescription?.message : ''}\n                            />\n                        }/>\n\n                        <Stack\n                        spacing={1}\n                        direction=\"row\"\n                        justifyContent=\"flex-end\">\n                            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n                            <Button onClick={()=>setEditTodoOpen(false)} type=\"button\" variant=\"outlined\">Cancel</Button>\n                        </Stack>\n\n                    </Stack>\n                </form>\n            </Box>\n        </Modal>\n    </div>\n}\n\nexport default EditTodo;","//import DeleteTodo from '.components/DeleteTodo/DeleteTodo';//cut it and paste to the component\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { useDispatch } from 'react-redux';\nimport {\n    actionDeleteTodo\n} from '../../app/Reducers/todo/todoSlice';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst DeleteTodo = ({\n    todo,\n    deleteConfirmationOpen,\n    setDeleteConfirmationOpen\n}) => {\n\n    const dispatch = useDispatch();\n\n    return <div className='DeleteTodoContainer'>\n        <Modal\n            keepMounted\n            open={deleteConfirmationOpen}\n            onClose={()=>setDeleteConfirmationOpen(false)}\n            aria-labelledby=\"keep-mounted-modal-title\"\n            aria-describedby=\"keep-mounted-modal-description\"\n        >\n            <Box sx={style}>\n                <Stack spacing={2}>\n                    \n                    <Typography\n                    id=\"keep-mounted-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                    style={{marginBottom:25}}>\n                        {`Delete Todo \"${todo.name}\"?`}\n                    </Typography>\n\n                    <Stack\n                    spacing={1}\n                    direction=\"row\"\n                    justifyContent=\"flex-end\">\n                        <Button variant=\"outlined\" onClick={()=>{\n                            dispatch(actionDeleteTodo(todo._id))\n                            setDeleteConfirmationOpen(false)\n                        }}>Yes</Button>\n                        <Button variant=\"outlined\">Cancel</Button>\n                    </Stack>\n\n                </Stack>\n            </Box>\n        </Modal>\n    </div>\n}\n\nexport default DeleteTodo;","//import TodoMoreOptions from '.components/TodoMoreOptions/TodoMoreOptions';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {v1 as uuid} from \"uuid\";\nimport EditTodo from \"./EditTodo\";\nimport DeleteTodo from \"./DeleteTodo\"\n\nconst TodoMoreOptions = ({\n    todo\n}) => {\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const [editTodoOpen, setEditTodoOpen] = useState(false);\n    const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => setAnchorEl(null);\n\n    const menuOptions = [\n        {\n            id: uuid(),\n            name: \"Edit\",\n            icon: <EditIcon fontSize=\"small\"/>,\n            callback: () => setEditTodoOpen(true)\n        },\n        {\n            id: uuid(),\n            name: \"Delete\",\n            icon: <DeleteIcon fontSize=\"small\"/>,\n            callback: () => setDeleteConfirmationOpen(true)\n        }\n    ];\n\n    const getMenuItems = () => {\n        return menuOptions.map(option=>(\n            <MenuItem\n            key={option.id}\n            onClick={()=>{\n                option.callback()\n                setAnchorEl(null)\n            }}>\n                <ListItemIcon>\n                    {option.icon}\n                </ListItemIcon>\n                <ListItemText>{option.name}</ListItemText>\n            </MenuItem>\n        ))\n    }\n    \n    return <div className='TodoMoreOptionsContainer'>\n        {/* <EditTodo/> */}\n        <IconButton\n        id=\"basic-button\"\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}>\n            <MoreHorizIcon/>\n        </IconButton>\n        <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n            'aria-labelledby': 'basic-button',\n            }}\n        >\n            {getMenuItems()}\n        </Menu>\n        <EditTodo\n            todo={todo}\n            editTodoOpen={editTodoOpen}\n            setEditTodoOpen={setEditTodoOpen}\n        />\n        <DeleteTodo\n            todo={todo}\n            deleteConfirmationOpen={deleteConfirmationOpen}\n            setDeleteConfirmationOpen={setDeleteConfirmationOpen}\n        />\n    </div>\n}\n\nexport default TodoMoreOptions;","//import TodoActions from '.components/TodoActions/TodoActions';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@mui/icons-material/PauseCircleOutline';\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\nimport { useDispatch } from 'react-redux';\n\nimport {\n    actionPauseTodo,\n    actionResumeTodo,\n    actionEndTodo,\n    actionStartTodo\n} from '../../app/Reducers/todo/todoSlice';\n\nconst TodoActions = ({\n    todo\n}) => {\n\n    const dispatch = useDispatch();\n    \n    const onStartEvent = () => {\n        dispatch(actionStartTodo(todo))\n    }\n    const onEndEvent = () => {\n        dispatch(actionEndTodo(todo._id))\n    }\n    const onPauseEvent = () => {\n        dispatch(actionPauseTodo(todo._id))\n    }\n    const onResumeEvent = () => {\n        dispatch(actionResumeTodo(todo))\n    }\n\n    return <div className=\"actions-container\">\n        {\n                todo?.status === 1 ? (\n                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                        <IconButton onClick={()=>onPauseEvent()} aria-label=\"pause\" size=\"medium\">\n                            <PauseCircleOutlineIcon fontSize=\"inherit\" />\n                        </IconButton>\n                        <IconButton onClick={()=>onEndEvent()} aria-label=\"delete\" size=\"medium\">\n                            <StopCircleIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Stack>\n                ) :\n                todo?.status === 0 ? (\n                    <IconButton onClick={()=>onStartEvent()} aria-label=\"start\" size=\"medium\">\n                        <PlayCircleOutlineIcon fontSize=\"inherit\" />\n                    </IconButton>\n                ) :\n                todo?.status === 2 ? (\n                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                        <IconButton onClick={()=>onResumeEvent()} aria-label=\"resume\" size=\"medium\">\n                            <PlayCircleOutlineIcon fontSize=\"inherit\" />\n                        </IconButton>\n                        <IconButton onClick={()=>onEndEvent()} aria-label=\"delete\" size=\"medium\">\n                            <StopCircleIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Stack>\n                ) : \"\"\n            }\n    </div>\n}\n\nexport default TodoActions;","export const getTodoStatus = statusCode => {\n    switch(statusCode){\n        case 0 : return \"Not Started\"\n        case 1 : return \"On going\"\n        case 2 : return \"Paused\"\n        case 3 : return \"Done\"\n    }\n}\n\nexport const MomentType = {\n    comment: 1,\n    insight: 2,\n    challenge: 3\n}\n\nexport const getMomentType = statusCode => {\n    switch(statusCode){\n        case 1 : return \"Comment\"\n        case 2 : return \"Insight\"\n        case 3 : return \"Challenge\"\n    }\n}\n","import React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './Todo.scss';\nimport TodoMoreOptions from './TodoMoreOptions';\nimport TodoActions from './TodoActions'\nimport Axios from \"axios\";\nimport { getTodoStatus } from '../Hooks/Constants';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    actionSetTodoInSideNav\n} from '../../app/Reducers/todo/todoSlice';\n\nconst Todo = ({\n    todo\n}) => {\n\n    const dispatch = useDispatch();\n    \n    return <div className='TodoContainer'>\n        <div className=\"todo-info\">\n            <p\n            className=\"name\"\n            onClick={() => {\n                dispatch(actionSetTodoInSideNav(todo._id))\n            }}>{todo.name} ({getTodoStatus(todo?.status)})</p>\n            <p className=\"description\">{todo.description}</p>\n        </div>\n        <TodoActions todo={todo}/> \n        <TodoMoreOptions todo={todo}/>\n    </div>\n}\n\nexport default Todo;","//import CreateTodo from '.components/CreateTodo/CreateTodo';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\n// import './CreateTodo.scss';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  actionAddTodoInList\n} from '../../app/Reducers/todo/todoSlice';\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst schema = yup.object().shape({\n    todoName: yup.string().required(),\n    todoDescription: yup.string().required(),\n});\n\nconst CreateTodo = ({\n    createNotesOpen,\n    setCreateNotesOpen\n}) => {\n\n    const dispatch = useDispatch();\n\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            todoName: \"\",\n            todoDescription: \"\"\n        },\n        resolver: yupResolver(schema)\n    });\n\n    // reset the form after successfull submit of form data\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            setCreateNotesOpen(false)\n            // reset({ todoName: \"\", todoDescription: \"\" });\n        };\n    }, [isSubmitSuccessful, reset]);\n\n    // on form submit\n    const onSubmit = ({todoName,todoDescription}) => {\n\n        dispatch(actionAddTodoInList({\n            name: todoName,\n            description: todoDescription\n        }))\n        console.log({todoName,todoDescription})\n    }\n    return <div className='CreateTodoContainer'>\n        <Modal\n            keepMounted\n            open={createNotesOpen}\n            onClose={()=>setCreateNotesOpen(false)}\n            aria-labelledby=\"keep-mounted-modal-title\"\n            aria-describedby=\"keep-mounted-modal-description\"\n        >\n            <Box sx={style}>\n                <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"flex-start\"\n                spacing={2}\n                style={{marginBottom:25}}>\n\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\n                        {`Create Todo`}\n                    </Typography>\n\n                    <CloseIcon \n                    className=\"close-form-trigger\"\n                    onClick={()=>setCreateNotesOpen(false)}/>\n\n                </Stack>\n                <form className=\"todo-create-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Stack spacing={2}>\n\n                        <Controller\n                        name=\"todoName\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"Todo Name\"\n                            variant=\"outlined\"\n                            inputRef={input => input && setTimeout(() =>{\n                                input.focus()\n                            },100)}\n                            placeholder={\"Todo Name\"}\n                            error={!!errors.todoName}\n                            type=\"text\"\n                            multiline\n                            helperText={errors?.todoName ? errors?.todoName?.message : ''}\n                        />\n                        }/>\n                        \n                        <Controller\n                            name=\"todoDescription\"\n                            control={control}\n                            defaultValue={\"\"}\n                            render={({field}) => <TextField\n                                {...field}\n                                className=\"textArea\"\n                                label=\"Todo Description\"\n                                variant=\"outlined\"\n                                placeholder={\"Todo Description\"}\n                                error={!!errors.todoDescription}\n                                type=\"text\"\n                                multiline\n                                helperText={errors?.todoDescription ? errors?.todoDescription?.message : ''}\n                            />\n                        }/>\n\n                        <Stack\n                        spacing={1}\n                        direction=\"row\"\n                        justifyContent=\"flex-end\">\n                            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n                            <Button onClick={()=>setCreateNotesOpen(false)} type=\"button\" variant=\"outlined\">Cancel</Button>\n                        </Stack>\n\n                    </Stack>\n                </form>\n            </Box>\n        </Modal>\n    </div>\n}\n\nexport default CreateTodo;","//import TodoList from '.components/TodoList/TodoList';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './TodoList.scss';\nimport Todo from './Todo';//cut it and paste to the component\nimport Stack from '@mui/material/Stack';\nimport { useSelector } from 'react-redux';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateTodo from './CreateTodo';\n\n\nconst TodoList = ({\n    todoList,\n    appendSchedule\n}) => {\n    const { thirdPartyUserData } = useSelector(state => state.user);\n    const [createNotesOpen, setCreateNotesOpen] = useState(false)\n\n    return <div className='TodoListContainer'>\n        <div className=\"todo-heading-container\" onClick={()=>console.log(thirdPartyUserData)}>\n            <Stack direction=\"row\" alignItems=\"center\">\n                <h2>Todo List</h2>\n                <IconButton\n                sx={{ marginLeft: \"auto\", padding: \"5px\"}}\n                aria-label=\"add\"\n                onClick={()=>setCreateNotesOpen(true)}>\n                    <AddIcon />\n                </IconButton>\n            </Stack>\n        </div>\n        <CreateTodo\n            createNotesOpen={createNotesOpen}\n            setCreateNotesOpen={setCreateNotesOpen}/>\n        {todoList.filter(todo=>todo.status != 3).map(todo =><Todo\n                            key={todo._id}\n                            todo={todo}\n                            appendSchedule={appendSchedule}/>\n        )}\n    </div>\n}\n\nexport default TodoList;","//import NoteEditor from '.components/NoteEditor/NoteEditor';//cut it and paste to the component\nimport React, {useState,useEffect} from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Button from '@mui/material/Button';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst NoteEditor = ({\n    notes,\n    onSaveNote,\n    setShowNoteEditor\n}) => {\n    const [updatedNote, setUpdatedNote] = useState(notes);\n    const [toolBarSettings, setToolBarSettings] = useState([ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' ]);\n    // default is without for todo... this is the common note\n    \n    const {\n        notesFor\n    } = useSelector(state => state.note);\n\n    // useEffect(()=>{\n    //     if(notesFor == \"Planning\"){\n    //         console.log(\"Dumaan dito sa plannint\")\n    //         setToolBarSettings([ 'bold', 'italic', 'link' ])\n    //     }\n    // },[notesFor])\n\n    return <div className='NoteEditorContainer'>\n\n        <CKEditor\n            editor={ ClassicEditor }\n            data={notes}\n            config={{\n                toolbar: notesFor == \"Planning\" ? [ 'bold', 'italic', 'link' ] : [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' ]\n            }}\n            onReady={ editor => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log( 'Editor is ready to use!', editor );\n            } }\n            onChange={ ( event, editor ) => {\n                const data = editor.getData();\n                // console.log(editor)\n                setUpdatedNote(data)\n                // console.log( { event, editor, data } );\n            } }\n            onBlur={ ( event, editor ) => { // this might be applied on submit.\n                console.log( 'Blur.', editor );\n            } }\n            onFocus={ ( event, editor ) => { // this might be applied on click\n                console.log( 'Focus.', editor );\n            } }\n        />\n        <Button\n            variant=\"outlined\"\n            onClick={() => onSaveNote(updatedNote)}\n        >Save</Button>\n        <Button\n            variant=\"outlined\"\n            onClick={() => setShowNoteEditor(false)}\n        >Cancel</Button>\n    </div>\n}\n\nexport default NoteEditor;","const CustomHTMLParser = htmlString => {\n\n    const TextElem = e => ({\n        type:\n          'TextElem',\n        textContent:\n          e.textContent\n    })\n    \n    const Elem = e => ({\n        type:\n            'Elem',\n        tagName: \n            e.tagName,\n        attributes:\n            Array.from(e.attributes, ({name, value}) => [name, value]),\n        children:\n            Array.from(e.childNodes, fromNode)\n    })\n    \n    const fromNode = e => {\n        switch (e?.nodeType) {\n            case 1: return Elem(e)\n            case 3: return TextElem(e)\n            default: throw Error(`unsupported nodeType: ${e.nodeType}`) \n        }\n    }\n\n    const stringToHTML = function (str) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(str, 'text/html');\n        return doc.body;\n    };\n    \n    const html2json = e => JSON.stringify(Elem(e), null, '  ')\n    \n    return html2json(stringToHTML(htmlString))\n\n}\n\nexport default CustomHTMLParser;","import React from 'react';\nimport {v1 as uuid} from \"uuid\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst JSONToReact = ({\n    htmlJson,\n    onTextElementClick,\n    enableCopyText=false,\n    enableAddTodo=false,\n}) => {\n\n    const getTextData = elementData => elementData.reduce((a,c)=>a+(c.children ? c.children[0].textContent : c.textContent),\"\")\n\n    const parseChildren = children => {\n        return children.map(child=>parseHtmlJson(child));\n    }\n\n    const onCopyText = text => {\n        navigator.clipboard.writeText(text).then(function() {\n            console.log('Async: Copying to clipboard was successful!');\n        }, function(err) {\n            console.error('Async: Could not copy text: ', err);\n        });\n    }\n\n    const wrapDataInElement = (tagName,elementChildren) => {\n        const uID = uuid();\n        // console.log(elementChildren);\n        switch(tagName){\n            case \"P\" :      return  <p key={uID}>\n                                        {parseChildren(elementChildren)}\n                                        <span className=\"content-action-wrapper\">\n                                            {enableAddTodo ? <Tooltip title=\"Create Todo\">\n                                                <IconButton onClick={()=>onTextElementClick(getTextData(elementChildren))}>\n                                                    <AddCircleIcon />\n                                                </IconButton>\n                                            </Tooltip> : \"\"}\n                                            {enableCopyText ? <Tooltip title=\"Copy Text\">\n                                                <IconButton onClick={()=>onCopyText(getTextData(elementChildren))}>\n                                                    <ContentCopyIcon />\n                                                </IconButton>\n                                            </Tooltip> : \"\"}\n                                        </span>\n                                    </p>\n            case \"LI\" :     return  <li key={uID}>\n                                        {parseChildren(elementChildren)}\n                                        <span className=\"content-action-wrapper\">\n                                            {enableAddTodo ? <Tooltip title=\"Create Todo\">\n                                                <IconButton onClick={()=>onTextElementClick(getTextData(elementChildren))}>\n                                                    <AddCircleIcon />\n                                                </IconButton>\n                                            </Tooltip> : \"\"}\n                                            {enableCopyText ? <Tooltip title=\"Copy Text\">\n                                                <IconButton onClick={()=>onCopyText(getTextData(elementChildren))}>\n                                                    <ContentCopyIcon />\n                                                </IconButton>\n                                            </Tooltip> : \"\"}\n                                        </span>\n                                    </li>                        \n            case \"STRONG\" : return <strong key={uID}> {parseChildren(elementChildren)}    </strong>\n            case \"A\" :      return <a href={\"/\"} key={uID}>      {parseChildren(elementChildren)}    </a>\n            case \"UL\" :     return <ul key={uID}>     {parseChildren(elementChildren)}    </ul>\n            case \"OL\" :     return <ol key={uID}>     {parseChildren(elementChildren)}    </ol>\n            case \"BODY\" :   return <div key={uID}>    {parseChildren(elementChildren)}    </div>\n            case \"DIV\" :    return <div key={uID}>    {parseChildren(elementChildren)}    </div>\n            case \"SPAN\" :   return <span key={uID}>   {parseChildren(elementChildren)}    </span>\n            case \"H1\" :     return <h1 key={uID}>     {parseChildren(elementChildren)}    </h1>\n            case \"H2\" :     return <h2 key={uID}>     {parseChildren(elementChildren)}    </h2>\n            case \"H3\" :     return <h3 key={uID}>     {parseChildren(elementChildren)}    </h3>\n            default:        return <div key={uID}>    {parseChildren(elementChildren)}    </div>\n        }\n    }\n\n    const parseHtmlJson = childElement => {\n        // console.log(\"Dumaan dito wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\")\n        // console.log(childElement)\n        // console.log(\"Dumaan dito wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\")\n        if(childElement.type === \"Elem\"){\n            return wrapDataInElement(childElement.tagName,childElement.children)\n        }\n        else if(childElement.type === \"TextElem\"){\n            return childElement.textContent\n        }\n    }\n\n    return <div className='JSONToReactContainer'>\n        {parseHtmlJson(htmlJson)}\n    </div>\n}\n\nexport default JSONToReact;","//import DeleteNote from '.components/DeleteNote/DeleteNote';//cut it and paste to the component\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\nconst DeleteNote = ({\n    note,\n    deleteConfirmationOpen,\n    setDeleteConfirmationOpen,\n    deleteNote\n}) => {\n    return <div className='DeleteNoteContainer'>\n        <Modal\n            keepMounted\n            open={deleteConfirmationOpen}\n            onClose={()=>setDeleteConfirmationOpen(false)}\n            aria-labelledby=\"keep-mounted-modal-title\"\n            aria-describedby=\"keep-mounted-modal-description\"\n        >\n            <Box sx={style}>\n                <Stack spacing={2}>\n                    \n                    <Typography\n                    id=\"keep-mounted-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                    style={{marginBottom:25}}>\n                        {`Delete Note \"${note.title}\"?`}\n                    </Typography>\n\n                    <Stack\n                    spacing={1}\n                    direction=\"row\"\n                    justifyContent=\"flex-end\">\n                        <Button variant=\"outlined\" onClick={()=>deleteNote(note._id)}>Yes</Button>\n                        <Button variant=\"outlined\" onClick={()=>setDeleteConfirmationOpen(false)}>Cancel</Button>\n                    </Stack>\n\n                </Stack>\n            </Box>\n        </Modal>\n    </div>\n}\n\nexport default DeleteNote;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Axios from \"axios\";\nimport * as microsoftTeams from \"@microsoft/teams-js\";\n\n/* Just a test code... remove it afterwards */ \nconst URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n/* Just a test code... remove it afterwards */\nconst token = localStorage.getItem('wstoken');\nconst headers = {\n    headers: {\n        \"auth-token\": token\n    }\n}\n\nconst initialState = {\n    noteList: [],\n    notesFor: \"\"\n};\n\nexport const userSlice = createSlice({\n    name: 'note',\n    initialState,\n    reducers: {\n        createNote: (state,action) => {\n            state.noteList = [...state.noteList, action.payload]\n        },\n        updateNote: (state,action) => {\n            const updatedNote = action.payload;\n            state.noteList = [...state.noteList.map(note=>{\n                return note._id === updatedNote._id ? updatedNote : note\n            })]\n        },\n        setNotes: (state, action) => {\n            state.noteList = action.payload\n        },\n        setNotesFor: (state, action) => {\n            state.notesFor = action.payload\n        }\n    }\n});\n\nexport const {\n    createNote,\n    updateNote,\n    setNotes,\n    setNotesFor\n} = userSlice.actions;\n\nexport const actionCreateNotes = createdNoteData => (dispatch,getState) => {\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n    Axios.post(\n        `${URI}/notes/create`,\n        {\n            ...createdNoteData,\n            userId\n        },\n        headers\n    ).then(res=>{\n        dispatch(createNote(res.data))\n    })\n}\nexport const actionUpdateNotes = updatedNote => dispatch => {\n    Axios.put(\n        `${URI}/notes/update`,\n        {...updatedNote},\n        headers\n    ).then(res => {\n        dispatch(updateNote(res.data))\n    })\n}\nexport const actionDeleteNotes = noteId => dispatch => {\n    Axios.delete(\n        `${URI}/notes/${noteId}`,\n        headers\n    ).then(res => {\n        // setNoteList([...noteList.filter(note => note._id !== noteId)])\n    })\n}\nexport const actionGetNotes = () => dispatch => {\n    Axios.get(\n        `${URI}/notes`,\n        headers\n    ).then(res => {\n        dispatch(setNotes(res.data))\n    })\n}\nexport const actionSetNotesFor = notesFor => dispatch => {\n    dispatch(setNotesFor(notesFor))\n}\n\nexport const actionGetUserNotes = () => (dispatch,getState) => {\n\n    if(!token){ return 0 }\n\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n\n    Axios.get(\n        `${URI}/notes/user-notes/${userId}`,\n        headers\n    ).then(res => {\n\n        console.log(\"Ito yung response\")\n        console.log(res.data)\n        dispatch(setNotes(res.data))\n    })\n}\n\nexport const actionGetUserPlanningNotes = () => (dispatch,getState) => {\n\n    console.log(\"nandito ha... \")\n    if(!token){ return 0 }\n\n    const {user} = getState();\n    const userId = user.userData ? user.userData._id : null;\n    console.log(\"nandito ha sa labas ng axios... \")\n    Axios.get(\n        `${URI}/notes/user-planning-notes/${userId}`,\n        headers\n    ).then(res => {\n\n        console.log(\"Ito yung response\")\n        console.log(res.data)\n        dispatch(setNotes(res.data))\n    })\n}\n\nexport const noteList = state => state.note.noteList;\nexport const notesFor = state => state.note.notesFor;\n\nexport default userSlice.reducer;","//import EditNote from '.components/EditNote/EditNote';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {\n    actionUpdateNotes\n} from '../../app/Reducers/note/noteSlice';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst schema = yup.object().shape({\n    noteTitle: yup.string().required(),\n});\n\n\nconst EditNote = ({\n    note,\n    editNoteConfirmationOpen,\n    setEditNoteConfirmationOpen,\n    updateNote\n}) => {\n\n    const dispatch = useDispatch();\n\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            noteTitle: note.title\n        },\n        resolver: yupResolver(schema)\n    });\n\n    // reset the form after successfull submit of form data\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            // setEditNoteConfirmationOpen(false)\n        };\n    }, [isSubmitSuccessful, reset]);\n\n    // on form submit\n    const onSubmit = ({noteTitle}) => {\n        // updateNote({\n        //     ...note,\n        //     title: noteTitle\n        // })\n        dispatch(actionUpdateNotes({\n            ...note,\n            title: noteTitle\n        }))\n\n        setEditNoteConfirmationOpen(false)\n    }\n\n    return <div className='EditNoteContainer'>\n        <Modal\n            keepMounted\n            open={editNoteConfirmationOpen}\n            onClose={()=>setEditNoteConfirmationOpen(false)}\n            aria-labelledby=\"keep-mounted-modal-title\"\n            aria-describedby=\"keep-mounted-modal-description\"\n        >\n            <Box sx={style} spacing={2}>\n                <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"flex-start\"\n                spacing={2}\n                style={{marginBottom:25}}>\n\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\n                        {`Update Note Title`}\n                    </Typography>\n\n                    <CloseIcon \n                    className=\"close-form-trigger\"\n                    onClick={()=>setEditNoteConfirmationOpen(false)}/>\n\n                </Stack>\n                <form className=\"todo-edit-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Stack spacing={2}>\n\n                        <Controller\n                        name=\"noteTitle\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"Note Name\"\n                            variant=\"outlined\"\n                            inputRef={input => input && setTimeout(() =>{\n                                input.focus()\n                            },100)}\n                            placeholder={\"Note Name\"}\n                            error={!!errors.noteTitle}\n                            type=\"text\"\n                            multiline\n                            helperText={errors?.noteTitle ? errors?.noteTitle?.message : ''}\n                        />\n                        }/>\n\n                        <Stack\n                        spacing={1}\n                        direction=\"row\"\n                        justifyContent=\"flex-end\">\n                            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n                            <Button onClick={()=>setEditNoteConfirmationOpen(false)} type=\"button\" variant=\"outlined\">Cancel</Button>\n                        </Stack>\n\n                    </Stack>\n                </form>\n            </Box>\n        </Modal>\n    </div>\n}\n\nexport default EditNote;","//import Notes from '.components/Notes/Notes';//cut it and paste to the component\nimport React, {useState} from 'react';\nimport NoteEditor from './NoteEditor';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CustomHTMLParser from \"../Hooks/CustomHTMLParser\";\nimport JSONToReact from \"../Hooks/JSONToReact\";\nimport TitleIcon from '@mui/icons-material/Title';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Stack from '@mui/material/Stack';\nimport DeleteNote from './DeleteNote';\nimport EditNote from './EditNote';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {\n    actionAddTodoInList\n} from '../../app/Reducers/todo/todoSlice';\nimport {\n    actionUpdateNotes\n} from '../../app/Reducers/note/noteSlice';\n\nconst Notes = ({\n    note,\n    updateNote,\n    deleteNote,\n    enableCopyText,\n    enableAddTodo,\n}) => {\n   \n    const [noteContent, setNoteContent] = useState(note.content);\n    const [showNoteEditor, setShowNoteEditor] = useState(false);\n    const [jsonNote, setJsonNote] = useState(JSON.parse(CustomHTMLParser(note.content)));\n    const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false)\n    const [editNoteConfirmationOpen, setEditNoteConfirmationOpen] = useState(false)\n    const dispatch = useDispatch()\n\n    const createTodo = todoName => {\n        dispatch(actionAddTodoInList({\n            name: todoName,\n            description: todoName\n        }))\n    };\n\n    const onSaveNote = updatedNote => {\n        console.log(updatedNote)\n        // convert html string generated by the ck editor to json data\n        const rawJsonData = CustomHTMLParser(updatedNote);\n        console.log(rawJsonData)\n        setNoteContent(updatedNote); // set the note data\n        setShowNoteEditor(false); // close the editor\n        setJsonNote(JSON.parse(rawJsonData));\n        dispatch(actionUpdateNotes({\n            ...note,\n            content: updatedNote\n        }));\n    }\n\n    return (\n    <div className='NotesContainer'>\n        {/* {notes} */}\n        <div className=\"note-wrapper\">\n\n            <div className=\"note-header\">\n                <h2>{note.title} Notes</h2>\n                <Stack\n                direction=\"row\"\n                justifyContent=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}>\n                    <IconButton\n                    className={\"edit-note-trigger\"}\n                    onClick={()=>setShowNoteEditor(show=>!show)}\n                    aria-label=\"edit\"\n                    size=\"small\">\n                        <EditIcon fontSize=\"inherit\" />\n                    </IconButton>\n\n                    <IconButton\n                    className={\"edit-title-note-trigger\"}\n                    onClick={() => setEditNoteConfirmationOpen(true) }\n                    aria-label=\"Update title\"\n                    size=\"small\">\n                        <TitleIcon fontSize=\"inherit\" />\n                    </IconButton>\n\n                    <IconButton\n                    className={\"delete-note-trigger\"}\n                    onClick={() => setDeleteConfirmationOpen(true) }\n                    aria-label=\"Delete title\"\n                    size=\"small\">\n                        <DeleteIcon fontSize=\"inherit\" />\n                    </IconButton>\n                </Stack>\n                \n            </div>\n\n            <div className=\"note-content\">\n                {noteContent.length ?   <JSONToReact \n                                        htmlJson={jsonNote}\n                                        onTextElementClick={createTodo}\n                                        enableCopyText={enableCopyText}\n                                        enableAddTodo={enableAddTodo}\n                                        /> : \"\"}\n            </div>\n\n        </div>\n        \n        {showNoteEditor ? (\n            <NoteEditor\n            notes={noteContent}\n            onSaveNote={onSaveNote}\n            setShowNoteEditor={setShowNoteEditor}/>\n        ) : \"\"}\n\n        <EditNote\n            note={note}\n            editNoteConfirmationOpen={editNoteConfirmationOpen}\n            setEditNoteConfirmationOpen={setEditNoteConfirmationOpen}\n            updateNote={updateNote}\n        />\n\n        <DeleteNote\n            note={note}\n            deleteConfirmationOpen={deleteConfirmationOpen}\n            setDeleteConfirmationOpen={setDeleteConfirmationOpen}\n            deleteNote={deleteNote}\n        />\n    </div>\n    )\n}\n\nexport default Notes;","//import CreateNote from '.components/CreateNote/CreateNote';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from '@mui/material/TextField';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    actionCreateNotes\n} from '../../app/Reducers/note/noteSlice';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst schema = yup.object().shape({\n    title: yup.string().required(),\n    description: yup.string().default(\"\"),\n    content: yup.string().default(\"\")\n});\n\n\nconst CreateNote = ({\n    createNotesOpen,\n    setCreateNotesOpen\n}) => {\n\n    const dispatch = useDispatch();\n    const { notesFor } = useSelector(state => state.note);\n\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            title: \"\",\n            description: \"\"\n        },\n        resolver: yupResolver(schema)\n    });\n\n    // reset the form after successfull submit of form data\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            setCreateNotesOpen(false)\n            // reset({ title: \"\", description: \"\" });\n        };\n    }, [isSubmitSuccessful, reset]);\n\n    // on form submit\n    const onSubmit = ({title,description}) => {\n        dispatch(actionCreateNotes({\n            title,\n            description,\n            content: \"\",\n            notesFor: notesFor \n        }))\n    }\n    \n    return <div className='CreateNoteContainer'>\n        <Modal\n            keepMounted\n            open={createNotesOpen}\n            onClose={()=>setCreateNotesOpen()}\n            aria-labelledby=\"keep-mounted-modal-title\"\n            aria-describedby=\"keep-mounted-modal-description\"\n        >\n            <Box sx={style} spacing={2}>\n                <Stack\n                direction=\"row\"\n                justifyContent=\"space-between\"\n                alignItems=\"flex-start\"\n                spacing={2}\n                style={{marginBottom:25}}>\n\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\n                        {`Update Notes`}\n                    </Typography>\n\n                    <CloseIcon \n                    className=\"close-form-trigger\"\n                    onClick={()=>setCreateNotesOpen(false)}/>\n\n                </Stack>\n                <form className=\"Notes-create-form\" onSubmit={handleSubmit(onSubmit)}>\n                    <Stack spacing={2}>\n\n                        <Controller\n                        name=\"title\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"Notes Title\"\n                            variant=\"outlined\"\n                            inputRef={input => input && setTimeout(() =>{\n                                input.focus()\n                            },100)}\n                            placeholder={\"Notes Title\"}\n                            error={!!errors.title}\n                            type=\"text\"\n                            multiline\n                            helperText={errors?.title ? errors?.title?.message : ''}\n                        />\n                        }/>\n                        \n                        <Controller\n                            name=\"description\"\n                            control={control}\n                            defaultValue={\"\"}\n                            render={({field}) => <TextField\n                                {...field}\n                                className=\"textArea\"\n                                label=\"Notes Description\"\n                                variant=\"outlined\"\n                                placeholder={\"Notes Description\"}\n                                error={!!errors.description}\n                                type=\"text\"\n                                multiline\n                                helperText={errors?.description ? errors?.description?.message : ''}\n                            />\n                        }/>\n\n                        {/* <Controller\n                            name=\"workspace\"\n                            control={control}\n                            defaultValue={\"\"}\n                            render={({field}) => <TextField\n                                {...field}\n                                className=\"textArea\"\n                                label=\"Notes Description\"\n                                variant=\"outlined\"\n                                placeholder={\"Notes Description\"}\n                                error={!!errors.description}\n                                type=\"text\"\n                                multiline\n                                helperText={errors?.description ? errors?.description?.message : ''}\n                            />\n                        }/> */}\n\n                        <Stack\n                        spacing={1}\n                        direction=\"row\"\n                        justifyContent=\"flex-end\">\n                            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n                            <Button onClick={()=>setCreateNotesOpen(false)} type=\"button\" variant=\"outlined\">Cancel</Button>\n                        </Stack>\n\n                    </Stack>\n                </form>\n            </Box>\n        </Modal>\n    </div>\n}\n\nexport default CreateNote;","//import NotesList from '.components/NotesList/NotesList';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './Notes.scss';\nimport Notes from './Notes';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport AddIcon from '@mui/icons-material/Add';\nimport Axios from \"axios\";\nimport Stack from '@mui/material/Stack';\nimport CreateNote from \"./CreateNote\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    actionGetUserNotes,\n    actionGetUserPlanningNotes\n} from '../../app/Reducers/note/noteSlice';\n\nconst NotesList = ({\n    enableCopyText,\n    enableAddTodo,\n}) => {\n    const {noteList} = useSelector(state => state.note);\n    const dispatch = useDispatch();\n    const [createNotesOpen, setCreateNotesOpen] = useState(false)\n    const [searchNote, setSearchNote] = useState('')\n    const URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n    const { notesFor } = useSelector(state => state.note);\n\n    useEffect(() => {\n        dispatch(notesFor == \"Planning\" ? actionGetUserPlanningNotes() : actionGetUserNotes());\n    }, [])\n\n    const updateNote = updatedNote => {\n        Axios.put(`${URI}/notes/update`,{...updatedNote}).then(res => {\n            console.log(res)\n            // setNoteList([...noteList.map(note=>{\n            //     return note._id === updatedNote._id ? updatedNote : note\n            // })])\n        })\n    }\n\n    const deleteNote = noteId => {\n        console.log(`${URI}/notes/${noteId}`);\n        Axios.delete(`${URI}/notes/${noteId}`).then(res => {\n            console.log(res)\n        })\n        \n    }\n    \n    \n    return <div className='NotesListContainer'>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            {noteList.length ? \n                <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-search-notes\">Search Notes</InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-search-notes\"\n                        value={searchNote}\n                        onChange={e=>{\n                            console.log(e.target.value);\n                            setSearchNote(e.target.value)\n                        }}\n                        label=\"Search Notes\"\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle Search Notes visibility\"\n                                edge=\"end\"\n                                >\n                                    <SearchIcon/>\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl> : \"\"\n            }\n            <Button\n            variant=\"contained\"\n            endIcon={<AddIcon />}\n            sx={{\n                width: 250\n            }}\n            onClick={()=>{\n                notesFor == \"Planning\" ?\n                setCreateNotesOpen(true) : // show planning note\n                setCreateNotesOpen(true) // show regular scribble note\n            }}>{notesFor == \"Planning\" ? \"New Planning Note\" : \"New Note\"}</Button>\n        </Stack>\n        <div className=\"note-list-wrapper\">\n            {noteList\n            .filter(note => (note.title+\"\")\n                            .toLowerCase()\n                            .indexOf(searchNote.toLowerCase()) > -1)\n                            .map(note=>(\n                                <Notes\n                                key={note._id}\n                                note={note}\n                                updateNote={updateNote}\n                                deleteNote={deleteNote}\n                                enableCopyText={enableCopyText}\n                                enableAddTodo={enableAddTodo}\n                                />\n                            )\n                )\n            }\n        </div>            \n        <CreateNote\n            createNotesOpen={createNotesOpen}\n            setCreateNotesOpen={setCreateNotesOpen}\n        />\n    </div>\n}\n\nexport default NotesList;","//import NotesAside from '.components/NotesAside/NotesAside';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport NotesList from './NotesList';\nimport Stack from '@mui/material/Stack';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst NotesAside = ({\n    showNotes,\n    setShowNotes,\n    fixed=false,\n    enableCopyText,\n    enableAddTodo,\n}) => {\n    return <div className={`NotesAsideContainer ${fixed ? 'fixed' : \"\"} ${showNotes ? 'open' : \"\"}`}>\n        <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n        style={{marginBottom:25}}\n        className=\"aside-data\">\n            <h2 className=\"panel-title\">Notes</h2>\n            <CloseIcon \n            className=\"close-form-trigger\"\n            onClick={()=>setShowNotes(false)}/>\n        </Stack>\n        {showNotes ?    <NotesList\n                        enableCopyText={enableCopyText}\n                        enableAddTodo={enableAddTodo}\n                        /> : \"\"}\n    </div>\n}\n\nexport default NotesAside;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Axios from \"axios\";\nimport * as microsoftTeams from \"@microsoft/teams-js\";\n\n/* Just a test code... remove it afterwards */ \nconst URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n/* Just a test code... remove it afterwards */\nconst token = localStorage.getItem(\"wstoken\");\nconst headers = {\n    headers: {\n        \"auth-token\": token\n    }\n}\n\nconst initialState = {\n    thirdPartyUserData: null,\n    showAccountRegistration: false,\n    errorMessage: \"\",\n    userData: null,\n    accountExist: true,\n    teamMembers: []\n};\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setThirdPartyUserData: (state, action) => {\n            state.thirdPartyUserData = action.payload\n        },\n        setUserData: (state, action) => {\n            console.log(\"asdhfaskdjfhgakdhfgaksdhgfkashgfdkashdgfkjsdhg\")\n            state.userData = action.payload\n            state.showAccountRegistration = false\n            state.accountExist = true\n        },\n        setAccountExist: (state, action) => {\n            console.log(action.payload)\n            state.accountExist = action.payload.userExist\n            state.userData = action.payload.userExist ? action.payload.userData : null\n            console.log(action.payload.userData)\n        },\n        setShowRegistration: (state, action) => {\n            state.showAccountRegistration = action.payload\n        },\n        setShowError: (state, action) => {\n            state.errorMessage = action.payload\n        },\n        setTeamMembers: (state, action) => {\n            state.teamMembers = action.payload\n        }\n    }\n});\n\nexport const {\n    setThirdPartyUserData,\n    setUserData,\n    setAccountExist,\n    setShowRegistration,\n    setShowError,\n    setTeamMembers\n} = userSlice.actions;\n\n// for production\n// export const actionSetupThirdPartyUserData = () => dispatch => {\n//     microsoftTeams.initialize();\n//     microsoftTeams.getContext(async ThirdPartyUserData => {\n\n//         Axios.get(`${URI}/users/user-exist/${ThirdPartyUserData.loginHint}`).then(res => {\n//             const {userExist} = res.data;\n//             // if the user is not existing, show registration page\n//             if(!userExist){ \n//                 dispatch(showAccountRegistration(userExist)) \n//             }\n//             else{\n//                 // return the user id generated in the mongoDB\n//                 dispatch(setThirdPartyUserData(ThirdPartyUserData))    \n//             }\n            \n//         })\n//     });\n// };\n\nexport const actionRegister = thirdPartyUserData => dispatch => {\n    console.log(thirdPartyUserData)\n    Axios.post(\n        `${URI}/users/registration`,\n        thirdPartyUserData\n    ).then( res => {\n        console.log(res.data)\n        dispatch(setUserData(res.data))\n\n        // dispatch(updateTodoInList(res.data))\n    }).catch(error => {\n        console.log(error);\n        dispatch(setShowError(\"Email already exist\"))\n    });\n}\n\nexport const actionLogin = thirdPartyUserData => dispatch => {\n    Axios.post(\n        `${URI}/users/login`,\n        thirdPartyUserData\n    ).then( res => {\n        console.log(res.data)\n        localStorage.setItem(\"wstoken\", res.data.token)\n        dispatch(setUserData(res.data.userData))\n    })\n}\n\nexport const actionAuthenticateToken = () => async dispatch => {\n    if(!token){ \n        alert(\"Please login your account\")\n        return 0\n    }\n\n    Axios.get(\n        `${URI}/users/authenticate-token`,\n        headers\n    ).then( res => {\n        console.log(res)\n        dispatch(setUserData(res.data))\n    })\n}\n\nexport const actionShowAccountRegistration = show => dispatch => {\n    dispatch(setShowRegistration(show));\n}\n\nexport const actionGetTeamMembers = () => async dispatch => {\n    console.log(\"nandito sa actionGetTeamMembers\")\n    const res = await Axios.get(`${URI}/users/team-members`)\n    console.log(res.data)\n    dispatch(setTeamMembers(res.data))\n}\n\nexport const thirdPartyUserData = state => state.user.thirdPartyUserData;\nexport const calendarSchedules = state => state.user.thirdPartyUserData;\n\nexport default userSlice.reducer;","\nimport { createSlice } from '@reduxjs/toolkit';\nimport Axios from \"axios\";\n\n/* Just a test code... remove it afterwards */ \nconst URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n/* Just a test code... remove it afterwards */\nconst token = localStorage.getItem('wstoken');\nconst headers = {\n    headers: {\n        \"auth-token\": token\n    }\n}\n\nconst initialState = {\n    userPlanningList: [],\n    selectedPlan: null\n};\n\nexport const planningSlice = createSlice({\n    name: 'planning',\n    initialState,\n    reducers: {\n        setUserPlanningList: (state, action) => {\n            state.selectedPlan = action\n        },\n        setSelectedPlan: (state, action) => {\n            state.selectedPlan = action\n        }\n    }\n})\n\nexport const {\n    setUserPlanningList,\n    setSelectedPlan\n} = planningSlice.actions;\n\nexport const actionGetUserPlanningList = (userId) => async (dispatch,getState) => {\n\n}\n\nexport const actionGetPlanningDetails = (planningId) => async (dispatch,getState) => {\n\n}\n\nexport const actionRecordPlan = (user, todoList, calendarPlanData, selectedDateRange = []) => async (dispatch,getState) => {\n    \n    console.log(user);\n    console.log(todoList);\n    console.log(calendarPlanData);\n    console.log(selectedDateRange)\n    \n    Axios.post(\n        `${URI}/planning/create`,\n        {\n            user: user,\n            todoList: todoList,\n            calendarPlanData: calendarPlanData,\n            selectedDateRange: selectedDateRange\n        },\n        headers\n    ).then(res => {\n        console.log(res)\n    })\n    \n}\n\nexport default planningSlice.reducer;","//import Planning from '.components/Planning/Planning';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo,useCallback} from 'react';\nimport './Planning.scss';\n\nimport Calendar from \"@toast-ui/react-calendar\";\n\nimport 'tui-calendar/dist/tui-calendar.css';\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\nimport NotesAside from '../../components/Notes/NotesAside';\nimport TaskEstimatesPlan from '../../components/TaskEstimatesPlan/TaskEstimatesPlan';\nimport Button from '@mui/material/Button';\nimport NoteAltIcon from '@mui/icons-material/NoteAlt';\n\nimport moment from 'moment';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {\n  actionSetNotesFor\n} from '../../app/Reducers/note/noteSlice';\nimport {\n  actionGetTeamMembers\n} from '../../app/Reducers/user/userSlice';\nimport {\n  actionRecordPlan\n} from '../../app/Reducers/planning/planningSlice';\n\n\nconst start = new Date();\nconst end = new Date(new Date().setMinutes(start.getMinutes() + 30));\nconst schedules = [\n  {\n    calendarId: \"1\",\n    category: \"time\",\n    isVisible: true,\n    title: \"Study\",\n    id: \"1\",\n    body: \"Test\",\n    start,\n    end\n  },\n  {\n    calendarId: \"2\",\n    category: \"time\",\n    isVisible: true,\n    title: \"Meeting\",\n    id: \"2\",\n    body: \"Description\",\n    start: new Date(new Date().setHours(start.getHours() + 1)),\n    end: new Date(new Date().setHours(start.getHours() + 2))\n  }\n];\n\nconst calendars = [\n  {\n    id: \"1\",\n    name: \"My Calendar\",\n    color: \"#ffffff\",\n    bgColor: \"#9e5fff\",\n    dragBgColor: \"#9e5fff\",\n    borderColor: \"#9e5fff\"\n  },\n  {\n    id: \"2\",\n    name: \"Company\",\n    color: \"#ffffff\",\n    bgColor: \"#00a9ff\",\n    dragBgColor: \"#00a9ff\",\n    borderColor: \"#00a9ff\"\n  }\n];\n\nconst Planning = ({\n\n}) => {\n    const cal = useRef(null);\n    const [showNotes, setShowNotes] = useState(false)\n    const [calendarSchedule, setCalendarSchedule] = useState(schedules)\n    const dispatch = useDispatch();\n    const [noteTextList, setNoteTextList] = useState([]);\n    // const {\n    //   notesFor\n    // } = useSelector(state => state.notes);\n    \n    const onClickSchedule = useCallback((e) => {\n      const { calendarId, id } = e.schedule;\n      const el = cal.current.calendarInst.getElement(id, calendarId);\n  \n      console.log(e, el.getBoundingClientRect());\n    }, []);\n  \n    const onBeforeCreateSchedule = useCallback((scheduleData) => {\n      const schedule = {\n        id: String(Math.random()),\n        title: scheduleData.title,\n        isAllDay: scheduleData.isAllDay,\n        start: scheduleData.start,\n        end: scheduleData.end,\n        category: scheduleData.isAllDay ? \"allday\" : \"time\",\n        dueDateClass: \"\",\n        location: scheduleData.location,\n        // raw: {\n        //   class: scheduleData.raw[\"class\"]\n        // },\n        state: scheduleData.state\n      };\n\n      console.log(schedule)\n  \n      cal.current.calendarInst.createSchedules([schedule]);\n    }, []);\n  \n    const onBeforeDeleteSchedule = useCallback((res) => {\n      console.log(res);\n  \n      const { id, calendarId } = res.schedule;\n  \n      cal.current.calendarInst.deleteSchedule(id, calendarId);\n    }, []);\n  \n    // on calendar view update\n    const onBeforeUpdateSchedule = useCallback((e) => {\n      \n      const { schedule, changes } = e;\n\n      cal.current.calendarInst.updateSchedule(\n        schedule.id,\n        schedule.calendarId,\n        changes\n      );\n\n      const calObjectItems = cal.current.calendarInst._controller.schedules.items;\n      let updatedTime = 0;\n      \n      for (const [key, value] of Object.entries(calObjectItems)) {\n        if(value.body == schedule.body){\n          updatedTime += (value.end.getTime() - value.start.getTime()) / 1000 / 60 / 60;\n        }\n      }\n\n      setNoteTextList(noteTextList => [...noteTextList].map(noteData => {\n        return noteData.id == schedule.body ? {\n          ...noteData,\n          estimate: updatedTime\n        } : noteData\n      }))\n      \n    }, [noteTextList]);\n\n    const _getFormattedTime = (time) => {\n      const date = new Date(time);\n      const h = date.getHours();\n      const m = date.getMinutes();\n  \n      return `${h}:${m}`;\n    }\n  \n    const _getTimeTemplate = (schedule, isAllDay) => {\n      var html = [];\n  \n      if (!isAllDay) {\n        html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n      }\n      if (schedule.isPrivate) {\n        html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n        html.push(\" Private\");\n      } else {\n        if (schedule.isReadOnly) {\n          html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n        } else if (schedule.recurrenceRule) {\n          html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n        } else if (schedule.attendees.length) {\n          html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n        } else if (schedule.location) {\n          html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n        }\n        html.push(\" \" + schedule.title);\n      }\n  \n      return html.join(\"\");\n    }\n  \n    const templates = {\n      time: function (schedule) {\n        return _getTimeTemplate(schedule, false);\n      }\n    };\n\n    const savePlan = (selectedUser,selectedDateRange) => {\n      \n      if(selectedUser){\n        // See the calendar instance\n        const calendarPlanData = Object.entries(cal.current.calendarInst._controller.schedules.items).map(([key,value]) => value);\n        // pass the following to the API\n        dispatch(actionRecordPlan(\n          selectedUser,\n          noteTextList,\n          JSON.stringify(calendarPlanData),\n          selectedDateRange\n        ))\n      }\n      else {\n        alert(\"Select a member to plan\")\n      }\n      \n    }\n\n    useEffect(()=>{\n      dispatch(actionGetTeamMembers())\n      dispatch(actionSetNotesFor(\"Planning\"))\n    },[])\n  \n    return (\n      <div className=\"PlanningContainer\">\n        <div className=\"header-container\">\n          <h1>Planning</h1>\n          <div className=\"actions-wrapper\">\n            <Button \n            onClick={()=>setShowNotes(show=>!show)}\n            aria-label=\"note\"\n            variant=\"outlined\" startIcon={<NoteAltIcon fontSize=\"inherit\" />}>\n              Planning Notes\n            </Button>\n            <Button \n              onClick={()=>{\n                console.log(\n                  cal\n                  .current\n                  .props\n                  .schedules\n                  \n                )\n                setCalendarSchedule(cal\n                  .current\n                  .props\n                  .schedules)\n              }}\n              aria-label=\"note\"\n              variant=\"outlined\"\n              startIcon={<NoteAltIcon fontSize=\"inherit\" />}>\n              test calendar\n            </Button>\n            <Button \n            onClick={()=>{\n              // console.log(cal.current.calendarInst.getSchedule())\n              const x = cal.current\n              console.log(x)\n              // setCalendarSchedule()\n            }}\n            aria-label=\"note\"\n            variant=\"outlined\" startIcon={<NoteAltIcon fontSize=\"inherit\" />}>\n              clear\n            </Button>\n          </div>\n        </div>\n        <div className=\"planning-wrapper\">\n          <div className=\"calendar-layout\">\n            <Calendar\n            ref={cal}\n            height=\"1000px\"\n            view=\"week\"\n            useCreationPopup={true}\n            useDetailPopup={true}\n            template={templates}\n            calendars={calendars}\n            schedules={calendarSchedule}\n            onClickSchedule={onClickSchedule}\n            onBeforeCreateSchedule={onBeforeCreateSchedule}\n            onBeforeDeleteSchedule={onBeforeDeleteSchedule}\n            onBeforeUpdateSchedule={onBeforeUpdateSchedule}\n            />\n          </div>\n          <TaskEstimatesPlan\n            setCalendarSchedule = {setCalendarSchedule}\n            noteTextList = {noteTextList}\n            setNoteTextList = {setNoteTextList}\n            savePlan = {savePlan}\n          />\n        </div>\n\n        <NotesAside\n        showNotes={showNotes}\n        setShowNotes={setShowNotes}\n        fixed={true}\n        enableCopyText={true}/>\n      </div>\n    );\n}\n\nexport default Planning;","//import Registration from '.components/Registration/Registration';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './Registration.scss';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {\n    actionRegister,\n    actionShowAccountRegistration\n} from '../../app/Reducers/user/userSlice';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst schema = yup.object().shape({\n    firstName: yup.string().required(\"Provide last name\"),\n    lastName: yup.string().required(\"Provide last name\"),\n    teamsId: yup.string(),\n    email: yup.string().required(\"Provide valid email\"),\n    role: yup.string(),\n    password: yup.string()\n                .required('No password provided.') \n                .min(8, 'Password is too short - should be 8 chars minimum.')\n});\n\nconst Registration = ({\n    thirdPartyUserData,\n    setView\n}) => {\n\n    /* Just a test code... remove it afterwards */ \n    const URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n    /* Just a test code... remove it afterwards */\n    const dispatch = useDispatch()\n    \n    const { showAccountRegistration } = useSelector(state => state.user);\n\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            firstName: \"\",\n            lastName: \"\",\n            // teamsId: \"\",\n            email: thirdPartyUserData ? thirdPartyUserData.loginHint : \"\",\n            // role: \"\",\n        },\n        resolver: yupResolver(schema)\n    });\n\n    const onSubmit = registrationThirdPartyUserData => {\n        const {firstName, lastName, email, password} = registrationThirdPartyUserData;\n        dispatch(actionRegister(registrationThirdPartyUserData))\n    }\n\n    return <div className='RegistrationContainer form-wrapper'>\n        <form className=\"moment-create-form form-container\" onSubmit={handleSubmit(onSubmit)}>\n            <h1 className=\"title\">Registration</h1>\n            <Stack spacing={2}>\n                <Stack \n                direction=\"row\"\n                alignItems=\"center\"\n                spacing={2}>\n                    <Controller\n                        name=\"firstName\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            placeholder={\"First Name\"}\n                            error={!!errors.firstName}\n                            type=\"text\"\n                            sx={{ width: '100%' }}\n                            helperText={errors?.firstName ? errors?.firstName?.message : ''}\n                        />\n                    }/>\n                    <Controller\n                        name=\"lastName\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"lastName\"\n                            variant=\"outlined\"\n                            placeholder={\"lastName\"}\n                            error={!!errors.lastName}\n                            type=\"text\"\n                            sx={{ width: '100%' }}\n                            helperText={errors?.lastName ? errors?.lastName?.message : ''}\n                        />\n                    }/>\n                </Stack>\n                {/* <Stack \n                direction=\"row\"\n                alignItems=\"center\"\n                spacing={2}>\n                    <Controller\n                        name=\"teamsId\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"teamsId\"\n                            variant=\"outlined\"\n                            placeholder={\"teamsId\"}\n                            error={!!errors.teamsId}\n                            type=\"text\"\n                            sx={{ width: '100%' }}\n                            helperText={errors?.teamsId ? errors?.teamsId?.message : ''}\n                        />\n                    }/>\n                    <Controller\n                        name=\"role\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"role\"\n                            variant=\"outlined\"\n                            placeholder={\"role\"}\n                            error={!!errors.role}\n                            type=\"text\"\n                            sx={{ width: '100%' }}\n                            helperText={errors?.role ? errors?.role?.message : ''}\n                        />\n                    }/>\n                </Stack> */}\n                <Stack \n                direction=\"column\"\n                alignItems=\"center\"\n                spacing={2}>\n                    <Controller\n                        name=\"email\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            // disabled\n                            className=\"textArea\"\n                            label=\"email\"\n                            variant=\"outlined\"\n                            placeholder={\"email\"}\n                            error={!!errors.email}\n                            type=\"email\"\n                            sx={{ width: '100%' }}\n                            helperText={errors?.email ? errors?.email?.message : ''}\n                        />\n                    }/>\n                    <Controller\n                        name=\"password\"\n                        control={control}\n                        defaultValue={\"\"}\n                        render={({field}) => <TextField\n                            {...field}\n                            className=\"textArea\"\n                            label=\"password\"\n                            variant=\"outlined\"\n                            placeholder={\"password\"}\n                            error={!!errors.password}\n                            type=\"password\"\n                            sx={{ width: '100%' }}\n                            helperText={errors?.password ? errors?.password?.message : ''}\n                        />\n                    }/>\n                </Stack>\n                <Stack\n                spacing={1}\n                direction=\"row\"\n                justifyContent=\"flex-end\">\n                    <Button type=\"submit\" variant=\"outlined\">Register</Button>\n                    <Button onClick={()=>setView(\"login\")} type=\"button\" variant=\"outlined\">Cancel</Button>\n                </Stack>\n            </Stack>\n        </form>\n    </div>\n}\n\nexport default Registration;","//import Login from '.components/Login/Login';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './Login.scss';\nimport * as yup from \"yup\";\nimport TextField from '@mui/material/TextField';\n\nimport Button from '@mui/material/Button';\nimport {\n    actionAuthenticateToken,\n    actionLogin,\n    actionShowAccountRegistration\n} from '../../app/Reducers/user/userSlice';\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Axios from \"axios\";\n\n\nconst schema = yup.object().shape({\n    email: yup.string().required(\"Provide valid email\"),\n    password: yup.string()\n                .required('No password provided.') \n                .min(8, 'Password is too short - should be 8 chars minimum.')\n});\n\nconst Login = ({\n    setView\n}) => {\n\n    const dispatch = useDispatch()\n    \n    const { showAccountRegistration } = useSelector(state => state.user);\n\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            // email: thirdPartyUserData ? thirdPartyUserData.loginHint : \"\",\n            email: \"\",\n            password: \"\"\n        },\n        resolver: yupResolver(schema)\n    });\n\n    const onSubmit = registrationThirdPartyUserData => {\n        const {email, password} = registrationThirdPartyUserData;\n        dispatch(actionLogin({email, password}))\n    }\n\n    return <div className='LoginContainer form-wrapper'>\n        <form className=\"login-form form-container\" onSubmit={handleSubmit(onSubmit)}>\n            <h1 className=\"title\">Login</h1>\n            <Stack\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}>\n                <Controller\n                    name=\"email\"\n                    control={control}\n                    defaultValue={\"\"}\n                    render={({field}) => <TextField\n                        {...field}\n                        className=\"textArea\"\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        placeholder={\"email\"}\n                        error={!!errors.email}\n                        type=\"email\"\n                        sx={{ width: '100%' }}\n                        helperText={errors?.email ? errors?.email?.message : ''}\n                    />\n                }/>\n                <Controller\n                    name=\"password\"\n                    control={control}\n                    defaultValue={\"\"}\n                    render={({field}) => <TextField\n                        {...field}\n                        className=\"textArea\"\n                        label=\"Password\"\n                        variant=\"outlined\"\n                        placeholder={\"password\"}\n                        error={!!errors.password}\n                        type=\"password\"\n                        sx={{ width: '100%' }}\n                        helperText={errors?.password ? errors?.password?.message : ''}\n                    />\n                }/>\n                <Stack\n                spacing={1}\n                direction=\"row\"\n                justifyContent=\"flex-end\">\n                    <Button type=\"submit\" variant=\"outlined\">Login</Button>\n                    <Button onClick={()=>{setView(\"registration\")}} type=\"button\" variant=\"outlined\">Register</Button>\n                </Stack>\n            </Stack>\n\n        </form>\n\n        <Button\n        onClick={async () => {\n            dispatch(actionAuthenticateToken())\n            // const URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n            // const res = await Axios.get(`${URI}/users/authenticate-token`,{\n            //     headers: {\n            //         \"auth-token\": localStorage.getItem('wstoken')\n            //     }\n            // })\n            // console.log(res)\n        }}\n        type=\"button\"\n        variant=\"outlined\">\n            Test query\n        </Button>\n    </div>\n}\n\nexport default Login;","//import Auth from '.components/Auth/Auth';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './Auth.scss';\nimport Registration from '../Registration/Registration';\nimport Login from '../Login/Login';\nimport { ReactComponent as Logo } from '../../Assets/logo.svg';\n\nconst Auth = ({\n\n}) => {\n    const [view,setView] = useState(\"login\")\n    return <div className='AuthContainer'>\n        <div className=\"logo-container\">\n            <Logo/>\n        </div>\n        {view==\"login\" ? <Login \n                            setView={setView}/> : \n                        <Registration\n                            setView={setView}/>\n        }\n    </div>\n}\n\nexport default Auth;","//import UpdateScheduleTime from '.components/UpdateScheduleTime/UpdateScheduleTime';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Axios from \"axios\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    actionScheduleChangeTime\n} from '../../app/Reducers/todo/todoSlice';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst UpdateScheduleTime = ({\n    schedule,\n    updateScheduleModalOpen,\n    setUpdateScheduleModalOpen,\n    updateSchedule\n}) => {\n    const [startTime, setStartTime] = useState(\"\");\n    const [endTime, setEndTime] = useState(null);\n    const URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        if(schedule){\n            setStartTime(new Date(schedule.start));\n            setEndTime(schedule.end ? new Date(schedule.end) : null);\n        }\n    },[schedule]);\n\n    const changeTime = () => {\n        /* \n        do the following validations:\n        1) if there is end time data, the start time must be less than the endtime\n        */\n       \n        if(startTime){\n            // do this after the deployment\n            // dispatch(actionScheduleChangeTime(\n            //     ...schedule,\n            //     startTime.toISOString(),\n            //     endTime ? endTime.toISOString() : null\n            // ))\n\n            Axios.put(`${URI}/calendar/schedule-change-time`,{\n                ...schedule,\n                start: startTime.toISOString(),\n                end: endTime ? endTime.toISOString() : null\n            }).then(res => {\n                console.log(\"pumasok dito\")\n                updateSchedule({\n                    ...res.data,\n                    id: res.data._id\n                })\n                setUpdateScheduleModalOpen(false)\n                // console.log(res)\n            })\n            \n        }\n        \n    }\n    \n\n    return <div className='UpdateScheduleTimeContainer'>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <Modal\n                keepMounted\n                open={updateScheduleModalOpen}\n                onClose={()=>setUpdateScheduleModalOpen(false)}\n                aria-labelledby=\"edit-time-modal\"\n                aria-describedby=\"keep-mounted-modal-description\"\n            >\n                <Box sx={style}>\n                    <Stack spacing={2}>\n\n                        {schedule ? <>\n                        <Typography\n                        id=\"edit-time-modal\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                        style={{marginBottom:25}}>\n                            {`Edit time of \"${schedule.title}\"`}\n                        </Typography>\n                        <Stack spacing={2}>\n                            <DateTimePicker\n                                label=\"Start time\"\n                                value={startTime}\n                                onChange={timeValue=>setStartTime(timeValue)}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                            {endTime ? \n                                <DateTimePicker\n                                    label=\"End time\"\n                                    value={endTime}\n                                    onChange={timeValue=>setEndTime(timeValue)}\n                                    renderInput={(params) => <TextField {...params} />}\n                                /> : \"\"\n                            }\n                        </Stack>\n                        </> : \"\"}\n\n                        <Stack\n                        spacing={1}\n                        direction=\"row\"\n                        justifyContent=\"flex-end\">\n                            <Button\n                            variant=\"outlined\"\n                            onClick={()=>{\n                                changeTime()\n                                // updateSchedule({\n                                //     ...schedule,\n                                //     start: startTime.toISOString(),\n                                //     end: endTime.toISOString()\n                                // })\n                                // setUpdateScheduleModalOpen(false)\n                            }}>Yes</Button>\n                            <Button\n                            variant=\"outlined\"\n                            onClick={()=>{\n                                setUpdateScheduleModalOpen(false)\n                            }}>Cancel</Button>\n                        </Stack>\n\n                    </Stack>\n                </Box>\n            </Modal>\n        </LocalizationProvider>\n    </div>\n}\n\nexport default UpdateScheduleTime;","//import MomentForm from '.components/MomentForm/MomentForm';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './MomentForm.scss';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\nimport MoreTimeIcon from '@mui/icons-material/MoreTime';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport SendIcon from '@mui/icons-material/Send';\nimport CancelIcon from '@mui/icons-material/Cancel';\n// import IconButton from '@mui/material/IconButton';\nimport Axios from \"axios\";\nimport { MomentType, getMomentType } from \"../Hooks/Constants\"\nimport { useSelector,useDispatch } from 'react-redux';\nimport {\n    actionAddMoment\n} from '../../app/Reducers/todo/todoSlice';\n\nconst schema = yup.object().shape({\n    moment: yup.string().required()\n});\n\n\nconst MomentForm = ({\n    todoId,\n    momentToEdit,\n    setMomentToEdit,\n    // setMomentList\n}) => {\n\n    /* Just a test code... remove it afterwards */ \n    const URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n    /* Just a test code... remove it afterwards */ \n\n    const [momentType, setMomentType] = React.useState(MomentType.comment);\n    const dispatch = useDispatch()\n\n    // form setup\n    const { control, handleSubmit, reset, formState: {errors,isSubmitSuccessful} } = useForm({ \n        defaultValues: {\n            moment: \"\"\n        },\n        resolver: yupResolver(schema)\n    });\n\n    // reset the form after successfull submit of form data\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            reset({ moment: \"\" });\n        };\n    }, [isSubmitSuccessful, reset]);\n\n    useEffect(()=>{\n        if(momentToEdit){\n            \n            reset({ moment: momentToEdit ? momentToEdit.moment : \"\" });\n            setMomentType(momentToEdit.momentType)\n            // console.log(\"testing the moment to edit\")\n            // console.log(momentToEdit.momentType)\n        }\n    },[momentToEdit])\n\n    // on form submit\n    const onSubmit = ({moment,description}) => {\n        console.log(moment)\n        // console.log(description)\n        // submit the form here using api\n        if(momentToEdit){\n            console.log(\"toedit\")\n            console.log(momentToEdit)\n            {\n                Axios.put(`${URI}/moments/edit-moment`,{\n                    momentId: momentToEdit._id,\n                    todoId,\n                    updatedMomentText: moment,\n                    momentType\n                }).then(res => {\n                    console.log(res)\n                    setMomentToEdit(null)\n                })\n            }\n        }\n        else{\n            console.log(\"toadd\")\n            dispatch(actionAddMoment({\n                todoId,\n                moment,\n                momentType\n            }))\n\n            // Axios.put(`${URI}/todos/add-moment`,{\n            //     todoId,\n            //     moment,\n            //     momentType\n            // }).then(res => {\n            //     setMomentList(res.data ? res.data.moments : [])\n            // })\n        }\n    }\n\n\n    return <div className='MomentFormContainer'>\n        <form className=\"moment-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <Stack spacing={2}>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={2}>\n                    <p className=\"moment-form-title\">My Moment</p>\n                    <ul className=\"moment-choices\">\n                        <li \n                        className={`${momentType === MomentType.comment ? \"active\" : \"\"}`}\n                        onClick={()=>setMomentType(MomentType.comment)}>\n                            <InsertCommentIcon/>\n                        </li>\n                        <li \n                        className={`${momentType === MomentType.insight ? \"active\" : \"\"}`}\n                        onClick={()=>setMomentType(MomentType.insight)}>\n                            <LightbulbIcon/>\n                        </li>\n                        <li \n                        className={`${momentType === MomentType.challenge ? \"active\" : \"\"}`}\n                        onClick={()=>setMomentType(MomentType.challenge)}>\n                            <MoreTimeIcon/>\n                        </li>\n                    </ul>\n                </Stack>\n                <Controller\n                    name=\"moment\"\n                    control={control}\n                    defaultValue={\"\"}\n                    render={({field}) => <TextField\n                        {...field}\n                        className=\"textArea\"\n                        label=\"Moment description\"\n                        variant=\"outlined\"\n                        placeholder={\"Moment description\"}\n                        error={!!errors.moment}\n                        type=\"text\"\n                        multiline\n                        helperText={errors?.moment ? errors?.moment?.message : ''}\n                    />\n                }/>\n                <Stack\n                direction=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                spacing={2}>\n                    <p className=\"moment-type-label\">{getMomentType(momentType)}</p>\n                    {momentToEdit ? <>\n                        <Button \n                            component={\n                                React.forwardRef((props, ref) => <button type=\"button\" {...props} ref={ref} />)\n                            }\n                            onClick={()=>setMomentToEdit(null)} \n                            variant=\"contained\" \n                            endIcon={<CancelIcon />}>Cancel</Button>\n                        <Button type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>Update</Button>\n                    </>:<>\n                        <Button type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>Submit</Button>\n                    </>}\n                    \n                </Stack>\n            </Stack>\n        </form>\n    </div>\n}\n\nexport default MomentForm;","//import MomentList from '.components/MomentList/MomentList';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\nimport moment from 'moment';\nimport Paper from '@mui/material/Paper';\nimport { getMomentType } from \"../Hooks/Constants\"\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\n\nimport './MomentList.scss';\n\nconst MomentList = ({\n    momentList,\n    setMomentToEdit\n}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedMoment,setSelectedMoment] = useState(null);\n\n    const open = Boolean(anchorEl);\n\n    const momentMoreOption = (event,moment) => {\n        setAnchorEl(event.currentTarget)\n        setSelectedMoment(moment)\n    };\n\n    const deleteMoment = () => {\n        console.log(`Delete this moment ${selectedMoment}`)\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null)\n        setSelectedMoment(null)\n        setMomentToEdit(null)\n    };\n\n    const menuOptions = [\n        {\n            id: 1,\n            name: \"Edit\",\n            icon: <EditIcon fontSize=\"small\"/>,\n            callback: () => setMomentToEdit(selectedMoment) // parent component function\n        },\n        {\n            id: 2,\n            name: \"Delete\",\n            icon: <DeleteIcon fontSize=\"small\"/>,\n            callback: () => deleteMoment() // component function\n        }\n    ];\n\n    const getMenuItems = () => {\n        return menuOptions.map(option=>(\n            <MenuItem\n            key={option.id}\n            onClick={()=>{\n                option.callback()\n                setAnchorEl(null)\n            }}>\n                <ListItemIcon>\n                    {option.icon}\n                </ListItemIcon>\n                <ListItemText>{option.name}</ListItemText>\n            </MenuItem>\n        ))\n    }\n\n    return <div className='MomentListContainer'>\n        <h3 className=\"my-moments\">My Moments</h3>\n        <div className=\"moment-list-wrapper\">\n            <Timeline>\n                {momentList.map(momentItem=>{\n                    return <TimelineItem key={momentItem._id}>\n                        <TimelineOppositeContent\n                        sx={{ m: '8px 0', p: `0 18px 0 0`, flex: `0 0 100px` }}\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                        >\n                            <div className=\"date-wrapper\">\n                                <p className=\"date\">{moment(momentItem.createdAt).format('L')}</p>\n                                <p className=\"time\">{moment(momentItem.createdAt).format('LT')}</p>\n                            </div>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                        <TimelineDot color=\"secondary\" />\n                        <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Paper elevation={2}>\n                                <div className=\"momentItem\">\n                                    <span className=\"moment-type\">{getMomentType(momentItem.momentType)}</span>\n                                    <p className=\"momentItem-desc\">{momentItem.moment}</p>\n                                    <IconButton\n                                    className=\"moment-more-option-trigger\"\n                                    aria-controls={open ? 'basic-menu' : undefined}\n                                    aria-haspopup=\"true\"\n                                    aria-expanded={open ? 'true' : undefined}\n                                    onClick={event => momentMoreOption(event,momentItem)}>\n                                        <MoreHorizIcon/>\n                                    </IconButton>\n                                </div>\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                })}\n            </Timeline>\n\n            <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                'aria-labelledby': 'basic-button',\n                }}\n            >\n                {getMenuItems()}\n            </Menu>\n        </div>\n    </div>\n}\n\nexport default MomentList;","//import TodoSideNav from '.components/TodoSideNav/TodoSideNav';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './TodoSideNav.scss';\nimport Stack from '@mui/material/Stack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport moment from 'moment';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport UpdateScheduleTime from './UpdateScheduleTime';\nimport { getTodoStatus } from '../Hooks/Constants';\nimport Axios from \"axios\";\nimport MomentForm from '../Moments/MomentForm'\nimport MomentList from '../Moments/MomentList'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    actionOpenSideNav\n} from '../../app/Reducers/todo/todoSlice';\nimport TodoActions from './TodoActions'\n\nconst TodoSideNav = ({\n    open,\n    schedule,\n    setAsideTodoOpen,\n    updateSchedule,\n    fixed=false\n}) => {\n\n    /* Just a test code... remove it afterwards */ \n    const URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n    /* Just a test code... remove it afterwards */\n\n    // const [momentList,setMomentList] = useState([]);\n    const [todoData,setTodoData] = useState(null);\n    const [momentToEdit, setMomentToEdit] = useState(null);\n    const dispatch = useDispatch();\n\n    const {\n        todoInSideNav,\n        scheduleInSideNav,\n        isSideNavOpen\n    } = useSelector(state => state.todo);\n\n    const [updateScheduleModalOpen, setUpdateScheduleModalOpen] = useState(false);\n\n    const getTimeStarted = () => {\n        if(scheduleInSideNav){\n            return  moment(scheduleInSideNav.start).format('LLL')\n        }\n        else if(todoInSideNav){\n            console.log(todoInSideNav)\n            return moment(todoInSideNav.start).format('LLL')\n        }\n        return \"Not Started\"\n    }\n\n    const getTimeEnded = () => {\n        if(scheduleInSideNav){\n            if(scheduleInSideNav.end)\n                return moment(scheduleInSideNav.end).format('LLL')\n        }\n        else if(todoInSideNav){\n            if(todoInSideNav.end)\n                return moment(todoInSideNav.end).format('LLL')\n        }\n        return \"Not Ended\"\n    }\n\n    const getScheduleData = () => <>\n        {/* This is the schedule data not the todo data fetch from the network */}\n        <p\n        className=\"todo-detail clickable\"\n        onClick={()=>setUpdateScheduleModalOpen(true)}>\n            <span className=\"icon\"><AccessTimeIcon/></span>\n            <span className=\"label\">Start Time: </span>\n            <span className=\"value\">{getTimeStarted()}</span>\n        </p>\n        <p\n        className=\"todo-detail clickable\"\n        onClick={()=>setUpdateScheduleModalOpen(true)}>\n            <span className=\"icon\"><AccessTimeIcon/></span>\n            <span className=\"label\">End Time: </span>\n            <span className=\"value\">{getTimeEnded()}</span>\n        </p>\n        <UpdateScheduleTime\n            schedule={scheduleInSideNav}\n            updateScheduleModalOpen={updateScheduleModalOpen}\n            setUpdateScheduleModalOpen={setUpdateScheduleModalOpen}\n            updateSchedule={updateSchedule}\n        />\n    </>\n\n    const sideNavTodoData = todoInSideNav ? todoInSideNav : scheduleInSideNav;\n\n    return <div className={`TodoSideNavContainer ${fixed ? \"fixed\" : \"\"} ${isSideNavOpen ? \"open\":\"\"}`}>\n       <div className=\"side-nav-wrapper\">\n            <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            spacing={2}\n            style={{\n                marginBottom:25,\n                paddingBottom:15,\n                borderBottom: \"1px solid #ccc\"\n            }}>\n                <h2 className=\"panel-title\">Todo Details</h2>\n                <span className=\"todo-status ongoing\">{getTodoStatus(sideNavTodoData?.status)}</span>\n                {sideNavTodoData ? <TodoActions todo={sideNavTodoData}/> : \"\"}\n                <CloseIcon \n                className=\"close-form-trigger\"\n                onClick={()=>dispatch(actionOpenSideNav(false))}/>\n            </Stack>\n            {sideNavTodoData ? <>\n                <h3 className=\"todo-title\">{sideNavTodoData?.name}</h3>\n                {/* Means that you selected a schedule in the calendar. Not todo data from network request */}\n                {getScheduleData()}\n            </> : \"\"}\n            <MomentList\n            momentList={sideNavTodoData ? sideNavTodoData.moments : []}\n            setMomentToEdit={setMomentToEdit}\n            />\n        </div>\n\n        <div className=\"moment-form-wrapper\">\n            {scheduleInSideNav || sideNavTodoData ? <MomentForm\n                        todoId={sideNavTodoData?._id}\n                        momentToEdit={momentToEdit}\n                        setMomentToEdit={setMomentToEdit}\n                        // setMomentList={setMomentList}\n                        /> : \"\"}\n        </div>\n    </div>\n}\n\nexport default TodoSideNav;","//import BurnoutIndex from '.components/BurnoutIndex/BurnoutIndex';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport {useSelector} from 'react-redux';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport \"./BurnoutIndex.scss\"\n\nconst BurnoutIndex = ({\n    \n}) => {\n    // const userReducer = useSelector(state => state.userReducer);\n    const {\n        burnoutIndexData\n    } = useSelector(state => state.dashboard);\n    let accountName = \"Jemuel Elimanco\";\n    // const burnoutIndexData = [\n    //     {name:\"Total Logged Hours\", value: 0.25},\n    //     {name:\"Productive Hours\", value: 0.25},\n    //     {name:\"Break Hours\", value: 0.00},\n    //     {name:\"Burnout Index\", value: 1.00},\n    // ]\n\n    \n\n    return <Paper className=\"paperStyles burnout-index-table-data-container member-data-container\">\n        <div className=\"table-data-container\">\n            <div className=\"heading-container\">\n                <h3>Burnout Index</h3>\n                <p className=\"desc\">{accountName ? accountName : '--'}</p>\n            </div>\n            <div className=\"table-container\">\n                <Table aria-label=\"simple table\">\n                    <TableBody>\n                    {burnoutIndexData.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                            <TableCell align=\"right\">{row.value.toFixed(2)}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </div>\n        </div>\n    </Paper>\n}\n\nexport default BurnoutIndex;\n","//import WeeklyAverageData from '.components/WeeklyAverageData/WeeklyAverageData';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport \"./WeeklyAverageData.scss\";\nimport { useSelector } from 'react-redux';\n\nconst WeeklyAverageData = ({\n\n}) => {\n    const { \n        averageCountData,\n        colorPallete\n    } = useSelector(state => state.dashboard);\n    \n    console.log(\"test\")\n\n    return <div className=\"weekly-average-data-container member-data-container\">\n        <div className=\"card-list-container\">\n            {averageCountData.map(e=>{\n                const comparison = e.previous;\n                const comparisonValue = e.current - e.previous;\n                const isNegative = comparison ? comparisonValue <= 0 : 0;\n                const weeklyComparisonVal = comparison ? comparisonValue * (isNegative ? -1 : 1) : 0;\n\n                return <div className=\"graphContainer\" key={e.id}>\n                    <div className=\"data-card\">\n                        <p className=\"card-title\"><span className=\"icon\"><AccessTimeIcon/></span><span className=\"text\">{e.name}</span></p>\n                        <p className=\"value\">{e.id!=\"bugsFixed\" ? e.current.toFixed(2) : e.current.toFixed(0)}</p>\n                        {e.id!=\"bugsFixed\" ? <p className=\"percent-comparison-container\">\n                            <span className={`percent-comparison ${isNegative ? \"red\" : \"green\"}`}>{(isNegative ? \"-\" : \"+\") + weeklyComparisonVal.toFixed(2)}</span> From Last week\n                        </p> : <p className=\"percent-comparison-container\"></p>}\n                    </div>\n                </div>}\n            )}\n        </div>\n    </div>\n}\n\nexport default WeeklyAverageData;\n","//import PostSlider from '.components/PostSlider/PostSlider';//cut it and paste to the component\nimport React, { useState, useEffect, Fragment, useRef, memo } from 'react';\nimport Slider from \"react-slick\";\nimport './PostSlider.scss';\nimport \"slick-carousel/slick/slick.css\";\n// import \"slick-carousel/slick/slick-theme.css\";\n\n\nconst PostSlider = ({\n    children,\n    numberOfSlides,\n    autoplay\n}) => {\n    var settings = {\n        dots: true,\n        arrows: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: autoplay,\n        autoplaySpeed: 5000,\n        pauseOnHover: true,\n        adaptiveHeight: true\n    };\n    useEffect(() => { }, [numberOfSlides, autoplay])\n\n    return <div className='PostSliderContainer'>\n        <Slider {...settings}>\n            {children}\n            {/* {[1,2,3,4].map(e=><Post key={e}/>)} */}\n        </Slider>\n    </div>\n}\n\nexport default PostSlider;","import React, { useState, useEffect, Fragment, useRef, memo } from 'react';\nimport TableChartIcon from '@mui/icons-material/TableChart';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport {\n    RadialChart\n} from 'react-vis';\n// import './BugsDashboard/BugsDashboard.scss';\n// import { InGeNioColors } from '../../utilities/Constants/ColorConstants';\n\nconst DoughnutChartWithTableSection = ({\n    graphData,\n    colorPallete,\n    totalGraphData,\n    withTableAndListToggle,\n    unit,\n    isPercentageData = true,\n    title,\n    chartWidth,\n    chartHeight\n}) => {\n    const [dataView, setDataView] = useState(\"legend\");\n    return <div className='doughnutChartWithTableSectionContainer'>\n\n        <div className=\"heading-container\">\n            <div className=\"heading-container\">\n                <h5>{title}</h5>\n\n                {withTableAndListToggle && <button\n                    className=\"view-toggle\"\n                    onClick={() => setDataView(dataView == \"table\" ? \"legend\" : \"table\")}>\n                    {dataView == \"table\" ? <MoreVertIcon style={{ color:\"#000fff\" }} /> : <TableChartIcon style={{ color:\"#000fff\" }} />}\n                </button>}\n            </div>\n        </div>\n        <div className=\"graph-and-table-data-container\">\n            <div className=\"dataGraphContainer\">\n                <RadialChart\n                    colorDomain={colorPallete}\n                    colorRange={colorPallete}\n                    innerRadius={40}\n                    radius={chartWidth ? chartWidth / 2 : 140}\n                    labelsRadiusMultiplier={0.85}\n                    style={{ color: \"#fff\" }}\n                    animation={true}\n                    data={\n                        graphData\n                            .sort((a, b) => b.count - a.count)\n                            .filter(x => x.count)\n                            .map((x, i) => {\n                                return {\n                                    angle: Number(x.count),\n                                    label: isPercentageData ? (x.count / totalGraphData * 100).toFixed(1) + \"%\" : x.count + (unit ? \" \" + unit : \"\"),\n                                    style: { color: \"#fff\" },\n                                    color: colorPallete[i % (colorPallete.length - 1)]\n                                }\n                            })\n                    }\n                    width={chartWidth ? chartWidth : 300}\n                    height={chartHeight ? chartHeight : 300}\n                    showLabels={true}>\n                </RadialChart>\n            </div>\n            {dataView == \"table\" ? <div className=\"tableDataContainer tableWrapperStyle\">\n                <TableContainer style={{ overflowX: 'initial' }}>\n                    <Table stickyHeader>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Workspace Name</TableCell>\n                                <TableCell>Count</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody className=\"custom-data-legends\">\n                            {graphData\n                                .sort((a, b) => b.count - a.count)\n                                .filter(x => x.count)\n                                .map((x, i) => {\n                                    return <TableRow key={x.i}>\n                                        <TableCell align=\"left\">\n                                            <span className=\"table-row-name\">\n                                                <span className=\"labelColor\" style={{ backgroundColor: `${colorPallete[i % colorPallete.length]}` }}>.</span>\n                                                <span className=\"labelText\">{x.label}</span>\n                                            </span>\n                                        </TableCell>\n                                        <TableCell align=\"center\">{x.count}</TableCell>\n                                    </TableRow>\n                                })}\n                            <TableRow>\n                                <TableCell align=\"left\">Total</TableCell>\n                                <TableCell align=\"center\">{totalGraphData}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n                :\n                <ul className=\"custom-data-legends\">\n                    {graphData\n                        .sort((a, b) => b.count - a.count)\n                        .filter(x => x.count)\n                        .map((x, i) => <li className=\"legend-data\" key={i}>\n                            <span className=\"labelColor\" style={{ backgroundColor: `${colorPallete[i % colorPallete.length]}` }}>.</span>\n                            <span className=\"labelText\">{x.label} ({x.count}{unit && \" \" + unit})</span>\n                        </li>)}\n                </ul>\n            }\n        </div>\n\n    </div >\n}\n\nexport default DoughnutChartWithTableSection;","//import LineGraph from '.components/LineGraph/LineGraph';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport {\n    XYPlot,\n    XAxis,\n    FlexibleWidthXYPlot,\n    YAxis,\n    HorizontalGridLines,\n    LineSeries\n} from 'react-vis';\nimport './LineGraph.scss';\n\nconst LineGraph = ({\n    graphDataArray,\n    colorPallete\n}) => {\n    return graphDataArray ? <div className=\"line-and-bar-graph\">\n        <div className=\"graphContainer\">\n            <FlexibleWidthXYPlot\n                // width={width}\n                animation\n                height={300}\n                xType=\"ordinal\">\n                {/* <VerticalGridLines style={{ stroke: '#B7E9ED' }} /> */}\n                <HorizontalGridLines style={{ stroke: '#dedede' }} />\n                <XAxis\n                    title=\"Date\"\n                    style={{\n                        line: { stroke: '#ADDDE1' },\n                        ticks: { stroke: '#ADDDE1' },\n                        text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600 }\n                    }}\n                    tickLabelAngle={-35}\n                />\n                <YAxis />\n\n                {graphDataArray.map((graphData,i) => <LineSeries key={graphData.id}\n                    className=\"\"\n                    style={{ strokeWidth: '2px', stroke: colorPallete[i] }}\n                    data={graphData.data}\n                />)}\n            </FlexibleWidthXYPlot>\n        </div>\n        <ul className=\"dataLegends\" style={{ width: \"300px\" }}>\n            {graphDataArray.map((e, i) => <li key={i} className=\"legend-container\">\n                <span\n                    className=\"legend\"\n                    style={{\n                        backgroundColor: colorPallete[i],\n                        height: \"2px\"\n                    }}\n                >.</span>\n                <span className=\"label\">{e.name}</span>\n            </li>)}\n        </ul>\n    </div> : \"\"\n}\n\nexport default LineGraph;","//import WeeklyBurnoutIndex from '.components/WeeklyBurnoutIndex/WeeklyBurnoutIndex';//cut it and paste to the component\nimport React, { useState, useEffect, Fragment, useRef, memo } from 'react';\nimport {\n    XYPlot,\n    XAxis,\n    FlexibleWidthXYPlot,\n    YAxis,\n    HorizontalGridLines,\n    LineSeries\n} from 'react-vis';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LineGraph from './Graphs/LineGraph';\n\nconst WeeklyBurnoutIndex = ({\n}) => {\n\n    const {\n        weeklyBurnoutIndex,\n        colorPallete\n    } = useSelector(state => state.dashboard);\n\n    return <div className=\"weekly-burnout-index-container\">\n        <div className=\"heading-container\">\n            <h5>Weekly Burnout Index</h5>\n        </div>\n        <LineGraph\n        graphDataArray={[weeklyBurnoutIndex]}\n        colorPallete={colorPallete}/>\n    </div>\n}\n\nexport default WeeklyBurnoutIndex;","//import ProductivityAndEventContent from '.components/ProductivityAndEventContent/ProductivityAndEventContent';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LineGraph from './Graphs/LineGraph';\n\nconst ProductivityAndEventContent = ({\n\n}) => {\n    const { \n        weeklyProductivityAndEvent,\n        colorPallete\n    } = useSelector(state => state.dashboard);\n\n    console.log(weeklyProductivityAndEvent)\n    return <div className='ProductivityAndEventContentContainer'>\n        <div className=\"heading-container\">\n            <h5>Weekly Productivity and task</h5>\n        </div>\n        <LineGraph\n        graphDataArray={weeklyProductivityAndEvent}\n        colorPallete={colorPallete}/>\n    </div>\n}\n\nexport default ProductivityAndEventContent;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Axios from \"axios\";\nimport * as microsoftTeams from \"@microsoft/teams-js\";\nimport { Alert } from '@mui/material';\n\n/* Just a test code... remove it afterwards */ \nconst URI = \"https://reflect-backend-2.azurewebsites.net\";//process.env.DEV_MONGO_URL;\n/* Just a test code... remove it afterwards */\nconst token = localStorage.getItem('wstoken');\nconst headers = {\n    headers: {\n        \"auth-token\": token\n    }\n}\n\n/** \n    Helper functions\n**/\nconst getDayName = dateStr => { \n    const dateSplit = (new Date(dateStr)).toString().split(' '),\n        dayName = dateSplit[0],\n        dayNum = dateSplit[2];\n    return `${dayName} ${dayNum}`;\n}\n\nexport const weeklyDefaultValues = [\n    {x: \"Sun\", y:0},\n    {x: \"Mon\", y:0},\n    {x: \"Tue\", y:0},\n    {x: \"Wed\", y:0},\n    {x: \"Thu\", y:0},\n    {x: \"Fri\", y:0},\n    {x: \"Sat\", y:0}\n]\n\nconst initialState = {\n    weeklyBurnoutIndex: {\n        id: \"weeklyBurnoutIndex\",\n        name: \"Weekly Burnout Index\",\n        data: [{x: \"Sun\", y:0},\n        {x: \"Mon\", y:0},\n        {x: \"Tue\", y:0},\n        {x: \"Wed\", y:0},\n        {x: \"Thu\", y:0},\n        {x: \"Fri\", y:0},\n        {x: \"Sat\", y:0}]\n    },\n    weeklyProductivityAndEvent: [\n        {\n            id: \"productiveHours\",\n            name: \"Productive hours\",\n            data: [...weeklyDefaultValues]\n        },\n        {\n            id: \"numberOfEvents\",\n            name: \"Number of events\",\n            data: [...weeklyDefaultValues]\n        }\n    ],\n    averageCountData: [\n        {id: \"burnoutIndex\", name: \"Average Burnout Index\", current: 0, previous: 0},\n        {id: \"numberOfEvents\", name: \"Average No. of Events\", current: 0, previous: 0},\n        {id: \"productiveHours\", name: \"Average Productive Hours\", current: 0, previous: 0},\n        // {id: \"bugsFixed\", name: \"Total Bugs Fixed\", current: 0, previous: 0}\n    ],\n    burnoutIndexData: [\n        {id: \"burnoutIndex\", name: \"Burnout Index\", value: 0},\n        {id: \"productiveHours\", name: \"Productive Hours\", value: 0},\n        {id: \"breakHours\", name: \"Break Hours\", value: 0},\n        {id: \"totalLoggedHours\", name: \"Total Logged Hours\", value: 0}\n    ],\n    momentPerHourDefaultValues: [\n        { x: \"1am\", y: 0 },\n        { x: \"2am\", y: 0 },\n        { x: \"3am\", y: 0 },\n        { x: \"4am\", y: 0 },\n        { x: \"5am\", y: 0 },\n        { x: \"6am\", y: 0 },\n        { x: \"7am\", y: 0 },\n        { x: \"8am\", y: 0 },\n        { x: \"9am\", y: 0 },\n        { x: \"10am\", y: 0 },\n        { x: \"11am\", y: 0 },\n        { x: \"12pm\", y: 0 },\n        { x: \"1pm\", y: 0 },\n        { x: \"2pm\", y: 0 },\n        { x: \"3pm\", y: 0 },\n        { x: \"4pm\", y: 0 },\n        { x: \"5pm\", y: 0 },\n        { x: \"6pm\", y: 0 },\n        { x: \"7pm\", y: 0 },\n        { x: \"8pm\", y: 0 },\n        { x: \"9pm\", y: 0 },\n        { x: \"10pm\", y: 0 },\n        { x: \"11pm\", y: 0 },\n        { x: \"12am\", y: 0 },\n    ],\n    // weeklyProductivityDefaultValues: [\n    //     {\n    //         id: \"productiveHours\",\n    //         name: \"Productive Hours\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"vacationLeave\",\n    //         name: \"Vacation Leave\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"sickLeave\",\n    //         name: \"Sick Leave\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"emergencyLeave\",\n    //         name: \"Emergency Leave\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"officialBusiness\",\n    //         name: \"Official Business\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"errand\",\n    //         name: \"Errand\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"charging\",\n    //         name: \"Charging\",\n    //         data: [...weeklyDefaultValues]\n    //     },\n    //     {\n    //         id: \"unloggedHours\",\n    //         name: \"Unlogged Hours\",\n    //         data: [...weeklyDefaultValues]\n    //     }\n    // ],\n    colorPallete: [\n        '#eca251',\n        '#0398a8'\n    ],\n    dailyProductivityData: [\n        {\n            count: 0,\n            label: \"Productive Hours\"\n        },\n        {\n            count: 24,\n            label: \"Unlogged Hours\"\n        }\n    ]\n};\n\nexport const dashboardSlice = createSlice({\n    name: 'dashboard',\n    initialState,\n    reducers: {\n        setWeeklyBurnoutIndex: (state, action) => {\n            state.weeklyBurnoutIndex = action.payload\n        },\n        setWeeklyProductivityAndEvent: (state, action) => {\n            state.weeklyProductivityAndEvent = action.payload\n        },\n        setAverageCountData: (state, action) => {\n            state.averageCountData = action.payload\n        },\n        setBurnoutIndexData: (state, action) => {\n            state.burnoutIndexData = action.payload\n        },\n        setMomentPerHourDefaultValues: (state, action) => {\n            state.momentPerHourDefaultValues = action.payload\n        },\n        setWeeklyProductivity: (state, action) => {\n\n            const {averageCountData,calendarRecords} = action.payload;\n\n            state.averageCountData = averageCountData;\n\n            state.weeklyBurnoutIndex = {\n                id: \"weeklyBurnoutIndex\",\n                name: \"Weekly Burnout Index\",\n                data: calendarRecords.map(calRec=>{\n                    const breakAndProductiveHours = calRec.breakHours + calRec.productiveHours;\n                    const yVal = breakAndProductiveHours ? calRec.productiveHours / breakAndProductiveHours : 0;\n                    return {\n                        x: getDayName(calRec.date), y: yVal\n                    }\n                })\n            };\n\n            state.weeklyProductivityAndEvent = [\n                {\n                    id: \"productiveHours\",\n                    name: \"Productive hours\",\n                    data: calendarRecords.map(calRec=>{\n                        return {\n                            x: getDayName(calRec.date), y:calRec.productiveHours\n                        }\n                    })\n                },\n                {\n                    id: \"numberOfEvents\",\n                    name: \"Number of events\",\n                    data: calendarRecords.map(calRec=>{\n                        return {\n                            x: getDayName(calRec.date), y:calRec.tasks.length\n                        }\n                    })\n                }\n            ]\n\n            const lastElement = [...calendarRecords].pop();\n            console.log(lastElement)\n            const totalLoggedHours = lastElement.productiveHours + lastElement.breakHours\n            const burnoutIndex = lastElement.productiveHours / totalLoggedHours;\n            state.burnoutIndexData = [\n                {id: \"burnoutIndex\", name: \"Burnout Index\", value: burnoutIndex},\n                {id: \"productiveHours\", name: \"Productive Hours\", value: lastElement.productiveHours},\n                {id: \"breakHours\", name: \"Break Hours\", value: lastElement.breakHours},\n                {id: \"totalLoggedHours\", name: \"Total Logged Hours\", value: totalLoggedHours}\n            ]\n\n            state.dailyProductivityData = [\n                {\n                    count: lastElement.productiveHours,\n                    label: \"Productive Hours\"\n                },\n                {\n                    count: (24-lastElement.productiveHours),\n                    label: \"Unlogged Hours\"\n                }\n            ]\n\n        }\n    }\n});\n\nexport const {\n    setWeeklyBurnoutIndex,\n    setWeeklyProductivityAndEvent,\n    setAverageCountData,\n    setBurnoutIndexData,\n    setMomentPerHourDefaultValues,\n    setWeeklyProductivity\n} = dashboardSlice.actions;\n\n/** \n    Action functions\n**/\nexport const actionSetWeeklyBurnoutIndex = () => dispatch => {\n    // Axios.post(`${URI}/users/login`,thirdPartyUserData).then( res => {\n    //     console.log(res.data)\n        // dispatch(updateTodoInList(res.data))\n    // })\n}\n// average count values and the line graph datas must be the same\nexport const actionGetAverageCountData = (userId, urlParam = \"\") => async dispatch => {\n\n    const token = localStorage.getItem('wstoken');\n    if(!token){ return 0 }\n\n    const res = await Axios.get(\n                    `${URI}/calendar/calendar-get-week-average-comparison/${userId}?${urlParam}`,\n                    headers\n                )\n    console.log(res)\n    dispatch(setWeeklyProductivity(res.data))\n\n}\nexport const actionSetBurnoutIndexData = () => dispatch => {\n\n}\nexport const actionSetMomentPerHourDefaultValues = () => dispatch => {\n\n}\n\n\n\n\n\nexport const weeklyBurnoutIndex = state => state.dashboard.weeklyBurnoutIndex;\nexport const weeklyProductivityAndEvent = state => state.dashboard.weeklyProductivityAndEvent;\nexport const averageCountData = state => state.dashboard.averageCountData;\nexport const burnoutIndexData = state => state.dashboard.burnoutIndexData;\nexport const momentPerHourDefaultValues = state => state.dashboard.momentPerHourDefaultValues;\nexport const weeklyProductivityDefaultValues = state => state.dashboard.weeklyProductivityDefaultValues;\nexport const dailyProductivityData = state => state.dashboard.dailyProductivityData;\n\nexport default dashboardSlice.reducer;","//import Dashboard from '.components/Dashboard/Dashboard';//cut it and paste to the component\nimport React, {useState,useEffect,Fragment,useRef,memo} from 'react';\nimport './Dashboard.scss';\nimport BurnoutIndex from './BurnoutIndex/BurnoutIndex';\nimport WeeklyAverageData from './WeeklyAverageData/WeeklyAverageData';\nimport PostSlider from '../PostSlider/PostSlider';\nimport Paper from '@mui/material/Paper';\nimport DoughnutChartWithTableSection from './DoughnutChartWithTableSection';\nimport WeeklyBurnoutIndex from './WeeklyBurnoutIndex';\nimport ProductivityAndEventContent from './ProductivityAndEventContent';\n// import WeeklyGraphSlider from './WeeklyGraphSlider';\nimport Stack from '@mui/material/Stack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport {\n    actionGetAverageCountData\n} from '../../app/Reducers/dashboard/dashboardSlice';\nimport {\n    actionGetBreaktimeOnDateRange\n} from '../../app/Reducers/todo/todoSlice';\n\nconst Dashboard = ({\n    dashboardOpen,\n    setDashboardOpen\n}) => {\n\n    const doughnutColorPallete = [\n        \"#4472c4\",\n        \"#ed7d31\",\n        \"#a5a5a5\",\n        \"#ffc001\",\n        \"#5b9bd5\",\n        \"#70ad47\",\n        \"#264478\",\n        \"#e9452a\",\n        \"#33acaf\",\n        \"#7b6862\",\n        \"#06c\",\n        \"#4cb140\",\n        \"#009596\",\n        \"#5752d1\",\n        \"#f4c145\",\n        \"#ec7a07\",\n        \"#8bc1f7\",\n        \"#23511e\",\n        \"#a2d9d9\",\n        \"#2a265f\",\n        \"#bde2b9\",\n        \"#003737\",\n        \"#b2b0ea\",\n        \"#c58c01\",\n        \"#f4b678\",\n        \"#519de9\",\n        \"#38812f\",\n        \"#73c5c5\",\n        \"#3c3d99\",\n        \"#f6d173\",\n        \"#c46101\",\n        \"#004b95\",\n        \"#7cc674\",\n        \"#005f60\",\n        \"#8481dd\",\n        \"#f0ab00\",\n        \"#ef9234\",\n    ];\n    const {\n        dailyProductivityData\n    } = useSelector(state => state.dashboard);\n    const {\n        userData\n    } = useSelector(state => state.user);\n\n\n\n\n    // let dailyProductivityData = [\n    //     {\n    //         count: 6,\n    //         label: \"Productive Hours\"\n    //     },\n    //     {\n    //         count: 18,\n    //         label: \"Unlogged Hours\"\n    //     }\n    // ];\n\n    const dispatch = useDispatch();\n\n    console.log(userData._id)\n    useEffect(()=>{\n        const endDate = new Date();\n        const formattedEndDate = `endDate=${moment(endDate).format('YYYY-MM-DD')}`;\n        dispatch(actionGetAverageCountData(userData._id,`${formattedEndDate}`))\n    },[])\n\n    return <div className={`DashboardContainer ${dashboardOpen ? \"open\" : \"\"}`}>\n        <Stack \n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        spacing={2}\n        mb={2}>\n            <h2 onClick={()=>{\n                const endDate = new Date();\n                const formattedEndDate = `endDate=${moment(endDate).format('YYYY-MM-DD')}`;\n                dispatch(actionGetAverageCountData(userData._id,`${formattedEndDate}`))\n            }}>Dashboard</h2>\n\n            <p onClick={()=>{\n                const endDate = new Date();\n                const formattedEndDate = `endDate=${moment(endDate).format('YYYY-MM-DD')}`;\n                dispatch(actionGetBreaktimeOnDateRange(formattedEndDate))\n            }}>Testing the calendar</p>\n            <CloseIcon \n            className=\"close-form-trigger\"\n            onClick={()=>setDashboardOpen(false)}/>\n        </Stack>\n        <div className=\"top-panel\">\n            <div className='WeeklyGraphSliderContainer'>\n                <PostSlider>\n                    <ProductivityAndEventContent/>\n                    <WeeklyBurnoutIndex/>\n                </PostSlider>\n            </div>\n            <WeeklyAverageData/>\n        </div>\n        <div className=\"bottom-panel\">\n            <BurnoutIndex/>\n            <Paper className=\"productivity-data-container member-data-container paperStyles\">\n                <DoughnutChartWithTableSection\n                    graphData={[...dailyProductivityData]}\n                    colorPallete={doughnutColorPallete}\n                    totalGraphData={24}\n                    isPercentageData={false}\n                    unit=\"Hrs\"\n                    title=\"Breakdown Of Productivity\"\n                    chartWidth={230}\n                    chartHeight={230}\n                />\n            </Paper>\n        </div>\n    </div>\n}\n\nexport default Dashboard;","import React, {useState,useEffect} from \"react\";\nimport WingenioCalendar from \"./WingenioCalendar/WingenioCalendar\";\nimport \"./GlobalStyles/GlobalStyles.scss\";\nimport TodoList from \"./Todo/TodoList\";\nimport NotesAside from './Notes/NotesAside';\nimport Planning from '../pages/Planning/Planning';\nimport Auth from './Auth/Auth';\nimport NoteAltIcon from '@mui/icons-material/NoteAlt';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport TodoSideNav from './Todo/TodoSideNav';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport {\n  actionGetTodoList,\n  actionAddBreaktime\n} from '../app/Reducers/todo/todoSlice';\nimport Dashboard from \"./Dashboard/Dashboard\";\n\n\nexport default function Tab() {\n\n  const [showNotes, setShowNotes] = useState(false)\n  const [schedules,setSchedules] = useState([])\n  const [calendarValue, setCalendarValue] = useState(new Date())\n  const [selectedSchedule, setSelectedSchedule] = useState(null)\n  const [asideTodoOpen, setAsideTodoOpen] = useState(true)\n  const [dashboardOpen, setDashboardOpen] = useState(false)\n\n  const dispatch = useDispatch()\n  const {todoList} = useSelector(state => state.todo);\n  const {userData} = useSelector(state => state.user); \n\n  useEffect(() => {},[])\n  useEffect(() => {\n    if(userData)\n      dispatch(actionGetTodoList(userData._id))\n  }, [userData])\n\n  const appendSchedule = async ({calendar,todoData}) => {\n    let scheduleIndex = -1 \n    \n    scheduleIndex = calendar ? schedules.findIndex(s=>s._id===calendar._id) : calendar;\n\n    if(calendar){\n      if(scheduleIndex>-1){\n        const schedulesUpdate = [...schedules]\n        schedulesUpdate[scheduleIndex] = calendar;\n        setSchedules(schedulesUpdate)\n      } else {\n        setSchedules(schedules => [...schedules, calendar]);\n      }\n    }\n    const todoListUpdate = todoList.map(todoItem => {\n      return todoData._id === todoItem._id ? todoData : todoItem\n    });\n    \n  }\n\n  const updateSchedule = scheduleUpdate => {\n    setSchedules(schedules.map(schedule => {\n      if(scheduleUpdate.id === schedule.id){\n        console.log(\"may nakita\")\n        return scheduleUpdate;\n      }\n      return schedule\n    }));\n  }\n  \n  return (<>\n    {!userData ? <Auth/> :\n      false ? \n      <Planning/>\n      :\n      <div className=\"calendar-and-todo-wrapper\">\n        \n        <div className=\"todo-list-wrapper\">\n          <TodoList\n          todoList={todoList}\n          appendSchedule={appendSchedule}/>\n        </div>\n\n        <div className=\"calendar-wrapper\">\n\n          <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Button \n            onClick={()=>setShowNotes(show=>!show)}\n            aria-label=\"note\"\n            variant=\"outlined\" startIcon={<NoteAltIcon fontSize=\"inherit\" />}>\n              Task Notes\n            </Button>\n\n            <Button\n            onClick={()=>setDashboardOpen(true)} \n            variant=\"outlined\"\n            size=\"small\">\n              Dashboard\n            </Button>\n\n            <Button\n            onClick={()=>dispatch(actionAddBreaktime())} \n            variant=\"outlined\"\n            size=\"small\">\n              LunchBreak\n            </Button>\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Basic example\"\n                value={calendarValue}\n                onChange={(newCalendarValue) => {\n                  setCalendarValue(newCalendarValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n          </Stack>\n\n          <WingenioCalendar\n          schedules={schedules}\n          setSchedules={setSchedules}\n          updateSchedule={updateSchedule}\n          setAsideTodoOpen={setAsideTodoOpen}\n          />\n\n        </div>\n\n        <NotesAside\n        showNotes={showNotes}\n        setShowNotes={setShowNotes}\n        fixed={true}\n        enableAddTodo={true}/>\n\n        <TodoSideNav\n          schedule={selectedSchedule}\n          open={asideTodoOpen} \n          setAsideTodoOpen={setAsideTodoOpen}\n          updateSchedule={updateSchedule}\n          setSelectedSchedule={setSelectedSchedule}\n        />\n\n        <Dashboard  \n        dashboardOpen={dashboardOpen}\n        setDashboardOpen={setDashboardOpen}/>\n\n      </div>\n    }\n    </>);\n}\n","import React,{useEffect} from \"react\";\nimport './App.css';\nimport Tab from './components/Tab'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  setThirdPartyUserData\n} from './app/Reducers/user/userSlice';\n\nfunction App() {\n  \n  const dispatch = useDispatch()\n  useEffect(()=>{dispatch(setThirdPartyUserData())},[])\n\n  return (\n    <div>\n      <Tab/>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './Reducers/todo/todoSlice';\nimport userReducer from './Reducers/user/userSlice';\nimport noteReducer from './Reducers/note/noteSlice';\nimport dashboardReducer from './Reducers/dashboard/dashboardSlice';\nimport planningReducer from './Reducers/planning/planningSlice';\n\nexport const store = configureStore({\n  reducer: {\n    todo: todoReducer,\n    user: userReducer,\n    note: noteReducer,\n    dashboard: dashboardReducer,\n    planning: planningReducer,\n  },\n});\n","const graphEndPoint = \"https://graph.microsoft.com\";\n\nexport const msalConfig = {\n    auth: {\n        clientId: '0fb1c814-e935-440d-a047-62030421b933',\n        authority: 'https://login.microsoftonline.com/5f1017d2-12a8-44bb-8edd-fa42c5c23837',\n        redirectUri: 'http://localhost:3000'\n    },\n    cache: {\n      cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n      storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    }\n};\n\nexport const Msal2ProviderConfig = {\n    clientId: '0fb1c814-e935-440d-a047-62030421b933',\n    scopes: [\"User.Read\",'Calendars.Read']\n}\n\n// Add scopes here for ID token to be used at Microsoft identity platform endpoints.\nexport const loginRequest = {\n    scopes: [\"User.Read\",'Calendars.Read']\n};\n\n// Add the endpoints here for Microsoft Graph API services you'd like to use.\nexport const graphConfig = {\n    graphMeEndpoint: `${graphEndPoint}/v1.0/me`,\n    graphCalendarEndpoint: `${graphEndPoint}/v1.0/me/calendarview?startdatetime=2022-05-23T10:55:02.907Z&enddatetime=2022-05-30T10:55:02.907Z`\n};\n\n\n// https://graph.microsoft.com/v1.0/me/calendarview?startdatetime=2022-05-23T10:55:02.907Z&enddatetime=2022-05-30T10:55:02.907Z","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport {Msal2ProviderConfig} from './authConfig'\n\n// this is the code\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\n// import reportWebVitals from './reportWebVitals';\n\n// import {Providers} from '@microsoft/mgt-element'\n// import {Msal2Provider} from '@microsoft/mgt-msal2-provider'\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n// Providers.globalProvider = new Msal2Provider(Msal2ProviderConfig)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MsalProvider instance={msalInstance}>\n        <App />\n      </MsalProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n// npm i @reduxjs/toolkit react-dom --save --force\n"],"sourceRoot":""}